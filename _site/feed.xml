<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Mirkwood Ape</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2015-10-06T21:55:36+02:00</updated>
<id>/</id>
<author>
  <name>Yanuar Aditya</name>
  <uri>/</uri>
  <email>yanuart.adityan@gmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[C Tutorial #5 | Function & Math Operations]]></title>
  <link rel="alternate" type="text/html" href="/tutorial/c-tutor-5/" />
  <id>/tutorial/c-tutor-5</id>
  <published>2015-10-05T00:00:00+02:00</published>
  <updated>2015-10-05T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Now that you should have some basic on C, such as variables, data type, basic I/O, and control flow (conditional &amp;amp; loops), this part of the tutorial, we will learn more about function and math operations in C. Some compile-able examples are provided to help you to gain better understanding. We will try to design a C code to compute a math quadratic polynomial with specific inputs.&lt;/p&gt;

&lt;h3 id=&quot;function-in-c&quot;&gt;Function in C&lt;/h3&gt;

&lt;p&gt;Function is a group statements that together they perform a specific task. At least, one function &lt;code&gt;main()&lt;/code&gt;always be found on C program. A programmer can divide his code into separate functions. These functions can be located in different files, later on we will call this source codes. A group of source codes containing independent functions called library.&lt;/p&gt;

&lt;p&gt;The C standard library provides numerous built-in functions that can be called without us defining them. We have used &lt;code&gt;printf()&lt;/code&gt; function so far to let some texts to be displayed. Each built-in functions have specific purposes and mostly, we have to include corresponding header &lt;code&gt;#include &amp;lt;header&amp;gt;&lt;/code&gt; to be able to use the built-in functions.&lt;/p&gt;

&lt;p&gt;We can define our own function that will work depends on how we want them to. However, ones must know the general form of a function within C language.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;return_type&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;return_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;return_type&lt;/code&gt; is the type datas of the value that the function will return. In other words, when we call a function &lt;strong&gt;B&lt;/strong&gt; from function &lt;strong&gt;A&lt;/strong&gt;, we’re expecting something happen inside the function &lt;strong&gt;B&lt;/strong&gt; and when the function ends, it has some values that will be used by the calling function &lt;strong&gt;A&lt;/strong&gt;. There are several ways for function &lt;strong&gt;B&lt;/strong&gt; to pass this value to &lt;strong&gt;A&lt;/strong&gt;, but for now we will use &lt;code&gt;return&lt;/code&gt;. If the function does not have any value to return, then the &lt;code&gt;return_type&lt;/code&gt; can be set to &lt;code&gt;void&lt;/code&gt;, &lt;em&gt;e.g&lt;/em&gt;, &lt;code&gt;void main()&lt;/code&gt;. &lt;code&gt;arg_type&lt;/code&gt; defines type of the data for the input arguments, &lt;em&gt;e.g&lt;/em&gt;, int, char, float, etc. It is exactly similar with how you declare a variable in the main code block.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/801bff698247982f2d20.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;To find a square root product in C, the native built-in function is &lt;code&gt;sqrt()&lt;/code&gt;.To use this function, we must include corresponding library for it in &lt;strong&gt;line:02&lt;/strong&gt;. As you observe the whole codes, we have two additional functions to the &lt;code&gt;main()&lt;/code&gt; function, &lt;code&gt;quadratic()&lt;/code&gt; and &lt;code&gt;squareRoot()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;line:5&lt;/strong&gt;, on function &lt;code&gt;quadratic()&lt;/code&gt; declaration, it has &lt;code&gt;int&lt;/code&gt; return type because in the application, whenever we call it, we expect the function to return the result of a quadratic computation from variable &lt;code&gt;int a&lt;/code&gt;. Meanwhile, &lt;code&gt;squareRoot()&lt;/code&gt; function has different return type, which is &lt;code&gt;float&lt;/code&gt; because we’re gonna deal with real numbers as a result of square root computation from &lt;code&gt;float b&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another difference between these two functions, is how the declaration and code blocks are located. &lt;code&gt;quadratic()&lt;/code&gt; function has both declaration and code block located before &lt;code&gt;main()&lt;/code&gt;. The code block spans from &lt;strong&gt;line:6&lt;/strong&gt; to &lt;strong&gt;8&lt;/strong&gt;. While &lt;code&gt;squareRoot()&lt;/code&gt; has been declared before &lt;code&gt;main()&lt;/code&gt; in &lt;strong&gt;line:11&lt;/strong&gt; with the code block is presented after &lt;code&gt;main()&lt;/code&gt; from &lt;strong&gt;line:23&lt;/strong&gt; to &lt;strong&gt;26&lt;/strong&gt;. This will have same result in the end, just matter of preference on how you as the programmer feel comfort with one of them. Please do notice on latter method, you have to write the full function name twice.&lt;/p&gt;

&lt;p&gt;Now, when you started to develop a big C program, probably you will encounter numerous of independent function that needs to be called from different files. Next section will give you the big picture with examples.&lt;/p&gt;

&lt;h3 id=&quot;multiple-source-codes-in-c&quot;&gt;Multiple Source Codes in C&lt;/h3&gt;

&lt;p&gt;Now, let’s split the code into separate files. First, create header &lt;code&gt;source.h&lt;/code&gt; that consist declaration of every functions. Generally, other than the function declarations, macro parameters are found in header as well.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/8bd26165ecf6b6e9ab3c.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Afterward, define what will happen inside of each functions on the source file, &lt;code&gt;source.c&lt;/code&gt;. Start by including the header file on top of the code. This is optional actually if you use C99 compiler. If the name of the header and the source (just the name, without file extension) are same, in this case &lt;code&gt;source&lt;/code&gt;, then actually you don’t have to write &lt;code&gt;#include &quot;source.h&quot;&lt;/code&gt; inside &lt;code&gt;source.c&lt;/code&gt;. It will linked automatically thanks to the smart compiler.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/4f6941f3a7a50fb7d7a7.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;For now, we have fully modular source codes for function &lt;code&gt;quadratic()&lt;/code&gt; and &lt;code&gt;squareRoot()&lt;/code&gt;. As the functions are ready, now other functions can use those functions just by calling the header name. Let’s &lt;code&gt;main()&lt;/code&gt; inside &lt;code&gt;main.c&lt;/code&gt; calls both functions. Keep in mind, that here we assume that all of these files are located in same directory.&lt;/p&gt;

&lt;pre&gt;
+ directory
|__ source.h
|__ source.c
|__ main.c
&lt;/pre&gt;

&lt;p&gt;However, you can also put the source codes inside a directory, &lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;src&lt;/code&gt; like this,&lt;/p&gt;

&lt;pre&gt;
+ directory
|__ + src
|   |__ source.h
|   |__ source.h
|__ main.c
&lt;/pre&gt;

&lt;p&gt;and modify the &lt;code&gt;main.c&lt;/code&gt; to link to the proper directory of &lt;code&gt;source.h&lt;/code&gt; like this &lt;code&gt;#include &quot;src/source.h&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/765314056037b7a3f37a.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Neat!&lt;/p&gt;

&lt;h3 id=&quot;arithmetic-operators&quot;&gt;Arithmetic Operators&lt;/h3&gt;

&lt;p&gt;C programming language contains some mathematical operators. All of the arithmetic operators are shown on table below. Assume that two variables are given, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; with assigned values are 10 and 5 respectively. These two variables are called operands. From the table you can find the result from each operations.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;symbols&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;functions&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;results&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;adding two operands&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A + B equals to 15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;subtract two operands&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A - B equals to 5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;multiply two operands&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A * B equals to 50&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;divide two operands&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A / B equals to 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;modulus, remainder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A % B equals to 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;increment, increase value&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A++ will give 11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;–&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;decrement, decrease value&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;B– will give 4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Keep in mind that each operations can be used to form more complex calculations and over time, performance of your C codes is judged by how efficient the design of algorithm on C level. Now, let’s write a function to compute some practical math problems.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align*}
	&amp; y = x^2 + x + 5
\end{align*} %]]&gt;&lt;/script&gt;

&lt;p&gt;We have a quadratic polynomial function that takes &lt;code&gt;x&lt;/code&gt; as an input and store the result on &lt;code&gt;y&lt;/code&gt;. The value of &lt;code&gt;x&lt;/code&gt; can be arbitrary, thus we would like to use &lt;code&gt;float x&lt;/code&gt; and store the output to &lt;code&gt;float y&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can initiate the function, let’s call it &lt;code&gt;polyQuadratic&lt;/code&gt;. It will take &lt;code&gt;float x&lt;/code&gt; as an input and return a float value, thus the function itself has to be declared using float data type.&lt;/p&gt;

&lt;p&gt;Let’s add the function into &lt;code&gt;source.h&lt;/code&gt; where two previous functions exist.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;polyQuadratic&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The computation itself requires a quadratic operation and addition. For the quadratic, let’s utilise already defined &lt;code&gt;quadratic()&lt;/code&gt; function. However, we will encounter an issue here because of the difference on data type between return value of &lt;code&gt;quadratic()&lt;/code&gt; which is integer and the input data, which is &lt;code&gt;float x&lt;/code&gt;. However, such this problem, can be solved using casting. The compiler will automatically change one type of data into another if it makes sense. For instance, if you assign an integer value to a floating-point variable, the compiler will insert code to convert the &lt;code&gt;int&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;polyQuadratic&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quadratic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can check the final &lt;code&gt;sourceModified.h&lt;/code&gt;, &lt;code&gt;sourceModified.c&lt;/code&gt; and &lt;code&gt;main.c&lt;/code&gt; below.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/89cc6dc613a569d46ad1.js&quot;&gt; &lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/171211924000e11e8cf1.js&quot;&gt; &lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/a09ab012f83eb6cb40ce.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;The &lt;code&gt;x&lt;/code&gt; as the input for the equation should be arbitrary. However, for the simplicity 5 is just the value that pops out in my head. Thus, &lt;code&gt;y&lt;/code&gt; value after computation should be 35.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;welcome&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simplest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ever&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;calculate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;entering&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;got&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next tutorial will focused on &lt;a href=&quot;http://yanuartadityan.github.io/tutorial/c-tutor-6&quot;&gt;user inputs&lt;/a&gt; because so far we’ve just used static variables value. Thus, we should let our C program to be accessible by the users without they change anything inside the code.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/tutorial/c-tutor-5/&quot;&gt;C Tutorial #5 | Function &amp; Math Operations&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 05, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[C Tutorial #4 | Conditional Statement and Loops]]></title>
  <link rel="alternate" type="text/html" href="/tutorial/c-tutor-4/" />
  <id>/tutorial/c-tutor-4</id>
  <published>2015-10-04T00:00:00+02:00</published>
  <updated>2015-10-04T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    

    &lt;p&gt;&lt;a href=&quot;/tutorial/c-tutor-4/&quot;&gt;C Tutorial #4 | Conditional Statement and Loops&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[C Tutorial #3 | Types and Variables]]></title>
  <link rel="alternate" type="text/html" href="/tutorial/c-tutor-3/" />
  <id>/tutorial/c-tutor-3</id>
  <published>2015-10-04T00:00:00+02:00</published>
  <updated>2015-10-04T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;As we start working on every programming languages, we will encounter datas. Each programming languages have different approach on how to store and manipulate datas. C for example, it is known for quite strict on data types, due to the native environment of C that is often considered low-level compared to &lt;code&gt;Python&lt;/code&gt;, &lt;code&gt;Ruby&lt;/code&gt; or even &lt;code&gt;Java&lt;/code&gt;. Without understanding data types on C, it can lead into a situation where ‘supposed-to-be-efficient’ code becomes ‘resource-consuming’ code. It is certainly an opposite of the motivation people use C at the beginning, to build fast, small and efficient program. Even, unwanted issues that should be hindered, &lt;em&gt;e.g.&lt;/em&gt;, buffer overrun, memory leaks, or segmentation fault could be there causing potential bugs.&lt;/p&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;

&lt;p&gt;Variables or the basic data objects in a program, allow programmers to store datas such as integer values, string characters and floating points (real numbers). A variable tells the compiler how much the storage should be created in memory to store datas. A variable can be composed of letters, no matter whether it is in uppercase or lowercase letters. Also digits and underscore can be put upon a variable name. In C-programming, variables have to be declared first before you can using it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* declarations */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* declaration with initiation */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* definition */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14159625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Variable name can be composed of letters (both uppercase and lowercase letters), digits and underscore ‘_’ only. However, it is discouraged to use underscore as first letter on variable name even though it is permittable and legal. Just keep in mind, that some system and compiler specific names also uses variable with underscore as the first letter, thus it can become an unwanted conflict.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;line:01&lt;/strong&gt; and &lt;strong&gt;line:02&lt;/strong&gt; show two instances of variable declaration. Both variables are &lt;code&gt;integer&lt;/code&gt; type. This means each of &lt;code&gt;numX&lt;/code&gt; and &lt;code&gt;numY&lt;/code&gt; will use 4 bytes in memory, as once those variables are declared, 32 bits (for each) is allocated to store the value. In integer, with 32 bits of length, there are 4,294,967,296 decimal values that can be computed. The minimal and maximal value however, will start from -2,147,483,648 and end at 2,147,483,647. If you are confident enough that your data values will never become negative integer, then you can initiate an &lt;code&gt;unsigned integer&lt;/code&gt; to make the value start from zero and end at 4,294,967,295.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;float&lt;/code&gt; variable in &lt;strong&gt;line:04&lt;/strong&gt; are the numeric constants that has either fractional form or exponent form. This type of data store a floating point value in single precision (32 bits). An example, &lt;code&gt;float pi = 3.14159265;&lt;/code&gt;, will let the system to have Phi value stored as floating point. The accuracy of floating point however, is something that still be quite problematic for some programmers. Some certain value will be rounded here and there to get closest representation. The fact about floating point is that it can’t represent precisely all real numbers, thus for a highly critical computation that requires very precise numbers, this problem can be circumvented by utilising &lt;code&gt;double&lt;/code&gt; precision (64 bits) data type or with help from &lt;code&gt;long&lt;/code&gt; type modifier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;line:05&lt;/strong&gt; shows &lt;code&gt;char&lt;/code&gt; variable that store single character which is typically 8 bits in size. A char can be assigned a signed value between -128 to 127, an unsigned value between 0 to 255 or a single quoted ASCII character, &lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;char text = &quot;X&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_754-2008&quot;&gt;More&lt;/a&gt; about floating points…&lt;/p&gt;

&lt;h3 id=&quot;type-modifiers&quot;&gt;Type Modifiers&lt;/h3&gt;

&lt;p&gt;A compiler defines whether the default is signed or unsigned, so to be safe you should declare which type you want to use. Still, using signed or unsigned modifiers to a type data, &lt;em&gt;e.g.&lt;/em&gt; integer, will not change the size of the variable inside the memory. An integer stays 32 bit no matter it is signed or unsigned. Since introduction of &lt;a href=&quot;https://en.wikipedia.org/wiki/C99&quot;&gt;C99&lt;/a&gt;, the newest C-programming language standard, modifier &lt;code&gt;long&lt;/code&gt; is supported to enhance the precision of integer, float and double.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* OK */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 	

&lt;span class=&quot;cm&quot;&gt;/* overflow problem */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967296&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	

&lt;span class=&quot;cm&quot;&gt;/* OK */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967296&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another modifier, &lt;code&gt;const&lt;/code&gt; will let the corresponding variable fixed throughout the runtime.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* declare A and init the value */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* try to overwrite A with new value */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* check the result */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Still there are more modifiers in C99 standard, but we are not gonna look for it too deep for now. However, C can be quite demanding on how it stores the datas. This required more knowledge in order to master for ones to get the most of the C.&lt;/p&gt;

&lt;h3 id=&quot;a-good-example&quot;&gt;A Good Example&lt;/h3&gt;

&lt;p&gt;Here, an example that contains everything, from comments, macro variables, signed versus unsigned integers, and simple implementation of format tag inside &lt;code&gt;printf&lt;/code&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/575de6ff4302449a1a7a.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Basically, the code tells you to assign maximum signed integer value to &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; will have the minimum signed integer value. Afterward, by adding one decimal to &lt;code&gt;a&lt;/code&gt; is enough to let an overflow happens. When an overflow happens, the value of &lt;code&gt;a&lt;/code&gt; will be wrapped around to the minimum one, or equal to current &lt;code&gt;b&lt;/code&gt; value. The workaround for this is to use unsigned integer, demonstrated by variable &lt;code&gt;c&lt;/code&gt;. You can expect the output of code above to be shown like this,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2147483647&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2147483648&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2147483648&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2147483648&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2147483648&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you haven’t understand the idea of comment or &lt;code&gt;printf&lt;/code&gt;, you can check my &lt;a href=&quot;http://yanuartadityan.github.io/tutorial/c-tutor-2&quot;&gt;previous&lt;/a&gt; tutorial. On the next tutorial, we will learn on how to perform &lt;a href=&quot;http://yanuartadityan.github.io/tutorial/c-tutor-4&quot;&gt;conditional statements and loops&lt;/a&gt; on C.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/tutorial/c-tutor-3/&quot;&gt;C Tutorial #3 | Types and Variables&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[C Tutorial #2 | The First Program]]></title>
  <link rel="alternate" type="text/html" href="/tutorial/c-tutor-2/" />
  <id>/tutorial/c-tutor-2</id>
  <published>2015-10-03T00:00:00+02:00</published>
  <updated>2015-10-03T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Wise and experienced programmers will always tell you this, &lt;em&gt;the only way to learn a programming language is to write programs&lt;/em&gt;. It is true and I will just jumpstart by creating the very first simple C program. This program will simply prints some words, and play with how to bring the texts appear on the screen with &lt;code&gt;printf&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;First thing to know is that, C-language are written in &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.h&lt;/code&gt; file extensions. &lt;code&gt;.c&lt;/code&gt; is the compile-able file that consist every functions and routines while &lt;code&gt;.h&lt;/code&gt; is where you stores function names, variables, headers etc. You can live with &lt;code&gt;.c&lt;/code&gt; alone but sometimes in order for programmer to be able to hide the intellectual property of, &lt;em&gt;e.g&lt;/em&gt; the functions inside &lt;code&gt;.c&lt;/code&gt;, programmers  merely write the function name inside &lt;code&gt;.h&lt;/code&gt; and let the compiler transform &lt;code&gt;.c&lt;/code&gt; with the definition of the function into either static or dynamic &lt;em&gt;library&lt;/em&gt;. Thus, everyone who wants to use corresponding function, they will be provided by just the &lt;code&gt;.h&lt;/code&gt; and the library, without requiring them to have the original &lt;code&gt;.c&lt;/code&gt; code.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/300a69849266f41b58c9.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;&lt;strong&gt;line:01&lt;/strong&gt; demonstrates the use of a &lt;code&gt;#&lt;/code&gt; preprocessor. A preprocessor provides the ability for the inclusion of header files, macro expansions, conditional compilation, and line control. In many C implementations, it is a separate program invoked by the compiler as the first part of translation. &lt;a href=&quot;https://en.wikipedia.org/wiki/C_preprocessor&quot;&gt;Check…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Preprocessor is a separate step in the compilation process, thus is not part of the compiler. If you invoke a preprocessor in C, it will substitute the text with the one that is referred by the preprocessor, whether it is a macro function or a file header. Here a list of preprocessor that will be used frequently on this tutorial.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt; 	&lt;span class=&quot;cm&quot;&gt;/* substitutes a preprocessor macro */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; 	&lt;span class=&quot;cm&quot;&gt;/* inserts a particular header from file */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; 		&lt;span class=&quot;cm&quot;&gt;/* test if a compile time condition is satisfied (true) */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; 		&lt;span class=&quot;cm&quot;&gt;/* alternative branch if #if does not satisfied the condition */&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endif&lt;/span&gt; 		&lt;span class=&quot;cm&quot;&gt;/* end preprocessor conditional */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;line:03&lt;/strong&gt; is where you can find the first function called &lt;code&gt;main&lt;/code&gt;. A bracket &lt;code&gt;()&lt;/code&gt; after the function name collects the argument. Empty bracket means no argument passed onto the function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;line:04&lt;/strong&gt; and &lt;strong&gt;line:08&lt;/strong&gt; contain the function braces &lt;code&gt;{}&lt;/code&gt;. Statements of a function are enclosed in braces. &lt;code&gt;{&lt;/code&gt; begins the statements and &lt;code&gt;}&lt;/code&gt; ends the statements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;line:05&lt;/strong&gt; shows the invocation of function &lt;code&gt;printf&lt;/code&gt; and an argument &lt;code&gt;&quot;Hi, world\n&quot;&lt;/code&gt;. This function is called from the library &lt;code&gt;stdio.h&lt;/code&gt; that is described from &lt;strong&gt;line:01&lt;/strong&gt;. &lt;code&gt;printf&lt;/code&gt; prints output to the screen, in this case, strings from our argument between quotes &lt;code&gt;&quot; &quot;&lt;/code&gt;. &lt;code&gt;\n&lt;/code&gt; tells &lt;code&gt;printf&lt;/code&gt; to give a newline after printing the argument.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;line:07&lt;/strong&gt; with &lt;code&gt;return&lt;/code&gt; statement terminates the execution. However, as the name implies, &lt;code&gt;return&lt;/code&gt; gives certain value back to the calling function. If you call a function A within function &lt;code&gt;main&lt;/code&gt;, and you invoke &lt;code&gt;return value&lt;/code&gt; from within A, then &lt;code&gt;main&lt;/code&gt; will get the value that computed inside A. More detailed about return statement can be found on &lt;a href=&quot;https://en.wikipedia.org/wiki/Return_statement&quot;&gt;Wiki&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;how-to-comments&quot;&gt;How to Comments&lt;/h3&gt;

&lt;p&gt;When you put some information inside &lt;code&gt;/*&lt;/code&gt; and &lt;code&gt;*/&lt;/code&gt;, you just made a comment. This is what we called with multi-line comment, or sometimes also called a block comment. Comments are used by the programmers to explain functionality of certain parts of codes, or to keep notes for themselves.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/b3dc562143a8497a0dee.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;On &lt;strong&gt;line:01&lt;/strong&gt;, it shows how block comment works. Any characters between &lt;code&gt;/*&lt;/code&gt; and &lt;code&gt;*/&lt;/code&gt; are ignored by the compiler. On &lt;strong&gt;line:9&lt;/strong&gt; and &lt;strong&gt;10&lt;/strong&gt;, a single line comments are provided. A single line comment starts with &lt;code&gt;//&lt;/code&gt; and everything after it is ignored by the compiler until end of the line. This is originated from C++ style comment, but nowadays most of C compilers support this comment.&lt;/p&gt;

&lt;h3 id=&quot;quick-explanation-on-printf&quot;&gt;Quick Explanation on printf()&lt;/h3&gt;

&lt;p&gt;Originall, &lt;code&gt;printf()&lt;/code&gt; is declared with,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;format&lt;/code&gt; in here is the string that contains the text to be displayed. In sort, this is the text you wanted to see. It can be accompanied by the variables. An example of &lt;code&gt;printf(&quot;Hi World&quot;)&lt;/code&gt; will bring texts “Hi World” to be displayed on terminal. You can add format tags to determine data types, and point it out to the corresponding variables. If you have &lt;code&gt;int a&lt;/code&gt; and want to show it after “Hi World”, then the command will be &lt;code&gt;printf(&quot;Hi World %d&quot;, a)&lt;/code&gt;. The tag is &lt;code&gt;%&lt;/code&gt;, and &lt;code&gt;d&lt;/code&gt; represents signed decimal integer. &lt;code&gt;%f&lt;/code&gt; is format tag for floating point data type, &lt;code&gt;%s&lt;/code&gt; for characters, and &lt;code&gt;%x&lt;/code&gt; for hexadecimal integer. To check all of available format tags for C, you can see it &lt;a href=&quot;http://www.tutorialspoint.com/c_standard_library/c_function_printf.htm&quot;&gt;here&lt;/a&gt;. For the tutorial about variables, please refer to the end of this tutorial.&lt;/p&gt;

&lt;h3 id=&quot;spaces-on-c&quot;&gt;Spaces on C&lt;/h3&gt;

&lt;p&gt;Also, one thing to notice about C-syntax is, it does not care about spaces.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9b9901f6c2fcca06851b.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Those lines will resulted on same result with previous codes. But, remember humans will read your codes as well. So, keep it mind to make readable codes for your colleagues, friend or bosses.&lt;/p&gt;

&lt;p&gt;Next, we will go through the basic but one of the core in C, &lt;a href=&quot;http://yanuartadityan.github.com/tutorial/c-tutor-3&quot;&gt;variables and data types&lt;/a&gt;.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/tutorial/c-tutor-2/&quot;&gt;C Tutorial #2 | The First Program&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 03, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[C Tutorial #1 | Getting Acquainted with C]]></title>
  <link rel="alternate" type="text/html" href="/tutorial/c-tutor-1/" />
  <id>/tutorial/c-tutor-1</id>
  <published>2015-10-02T00:00:00+02:00</published>
  <updated>2015-10-02T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Probably, you will see C-language as nothing special. You might even say C sucks compared to Java, Ruby or Python nowadays. But, is it? Well, if you start coding from 90s, probably you’ve encountered a hard time developing with &lt;code&gt;Fortran&lt;/code&gt;, or &lt;code&gt;Assembly&lt;/code&gt; and C came as a saviour from the darkness, it’s like a &lt;a href=&quot;http://www.woohooitsbacon.com/10-reasons-why-c-is-still-the-best-programming-language/&quot;&gt;programming heaven&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are several top reasons why C is still a good language to learn, here I’ve compiled some.&lt;/p&gt;

&lt;h3 id=&quot;c-has-nice-syntax&quot;&gt;C has nice syntax&lt;/h3&gt;

&lt;p&gt;As a language that often interacts with the machine, C is considered to be a pretty language with beautiful syntax.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/300a69849266f41b58c9.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;As we can see, &lt;code&gt;Pygments&lt;/code&gt; rendered C-syntax (with line numbers) beautifully. Now, time for a trivia. Can you guess, how many programmers which are saved by C-syntax from obfuscating codes? Count me one!&lt;/p&gt;

&lt;h3 id=&quot;c-macros-are-the-best&quot;&gt;C macros are the best&lt;/h3&gt;

&lt;p&gt;Macros is one of the most important preprocessor &lt;code&gt;#&lt;/code&gt; implementation in C. It can be used to create a fast function without putting everything on the stack. Check this out,&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/b7a1b47ffdff16237ae1.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;In &lt;strong&gt;line:4&lt;/strong&gt;, we define the macro function &lt;code&gt;MACRO_OR&lt;/code&gt; that takes &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; as an input. Then, this macro will return the logical &lt;code&gt;OR&lt;/code&gt; result from &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Super neat!&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;line:12&lt;/strong&gt;, the macro is invoked to compute the logical &lt;code&gt;OR&lt;/code&gt; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and return the result to &lt;em&gt;c&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;c-is-small&quot;&gt;C is small&lt;/h3&gt;

&lt;p&gt;C utilised merely variables, macros, functions and structures. Therefore, C is considered small in size, complexity and that much of it. Due to this, C has been heavily used on embedded system, modern microprocessor, even modern &lt;code&gt;Arduino&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;More about this, lot of parallel programming languages, OpenMP, OpenCL, CUDA, etc, are based on C language due to its relative connection to lower level hardware compared with other languages.&lt;/p&gt;

&lt;h3 id=&quot;c-is-root-of-all-goodness&quot;&gt;C is root of all goodness&lt;/h3&gt;

&lt;p&gt;You can pretty much stand on opinion that C is different compared to &lt;em&gt;C++&lt;/em&gt; or &lt;em&gt;ObjectiveC&lt;/em&gt;, but from pedagogical approach, lot of programming expert will tell you to learn basic things from C, e.g. &lt;em&gt;overflow&lt;/em&gt;, &lt;em&gt;memory addressing&lt;/em&gt;, &lt;em&gt;pointer&lt;/em&gt;, &lt;em&gt;profiling&lt;/em&gt; and &lt;em&gt;debugging&lt;/em&gt;. A true concept of those languages can be learned from C.&lt;/p&gt;

&lt;h3 id=&quot;c-is-alive-and-sound&quot;&gt;C is alive and sound&lt;/h3&gt;

&lt;p&gt;The number one reason C is the best programming language today is still the fact that it simply powers everything. From your phone to your &lt;code&gt;Wii&lt;/code&gt;, no other language provides the level of hardware interaction with the practicality of a concise and expressive syntax. Unless you’re still using an early &lt;code&gt;IBM&lt;/code&gt; (please switch soon, if so), the screen you’re reading this article on is probably powered by C.&lt;/p&gt;

&lt;p&gt;With C, we can forget writing thousands of complex &lt;em&gt;Assembly&lt;/em&gt; routines, thousands of processor-specific instructions, and spaghetti like code. Because of C, the CPU, memory, and graphics cards have turned from their messy, low-level pasts into an easier, readable format&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/tutorial/c-tutor-1/&quot;&gt;C Tutorial #1 | Getting Acquainted with C&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 02, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Avoid Misconceptions from Now]]></title>
  <link rel="alternate" type="text/html" href="/blog/misconceptions/" />
  <id>/blog/misconceptions</id>
  <published>2015-09-30T00:00:00+02:00</published>
  <updated>2015-09-30T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Is &lt;code&gt;CPU&lt;/code&gt; the whole computers? Or just a jargon for processor? 
Is by clicking &lt;code&gt;refresh&lt;/code&gt; button rapidly will make your system faster? 
Is it correct, more &lt;code&gt;GHz&lt;/code&gt; will always give you faster overall performance?
Which one is to use, &lt;code&gt;byte&lt;/code&gt; or &lt;code&gt;bit&lt;/code&gt;?
How &lt;code&gt;RAM&lt;/code&gt; works similar as compared in an analogy to the famous librarian?&lt;/p&gt;

&lt;p&gt;All of those questions are quite common to be found almost anywhere. I thought at first, those are misconceptions about computer that will not happen when I am in Sweden. A friend of mine told me when he brought his broken PC to one of the electronic retail store here to let them fix it, when he told me he heard the IT-guy said,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Allright, we will try to fix your CPU as soon as possible. I’ll let you know afterward.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, how many people consider CPU as a whole computer? Probably most of you are doing this all the time. Sometimes, I do too. Even, this misconception has occurred since long time ago and I think, even for IT-guy, it is better for him to use it as if he mentioned something technically correct, &lt;em&gt;e.g&lt;/em&gt; desktop or machine, will be deemed too uncommon for most of people.&lt;/p&gt;

&lt;p&gt;In one of opportunities to talk in front of people, I brought this misconceptions material. I’ve compiled some quite common misconceptions, especially about basic computer organizations and explain more about how computer do this and that to give audience better understanding about how computer works.&lt;/p&gt;

&lt;iframe src=&quot;//slides.com/yanuartriadityanugraha/adoption-of-hybrid-electric-cars/embed&quot; width=&quot;576&quot; height=&quot;420&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You see, now there are more computers than world’s population. By bringing this fact, I would like to stand on my opinion that humans, no matter what background we are, we will encounter computers anywhere and anytime. Yeah, they don’t have soul, but people made computers not just to help us, but if we think, without computers, we couldn’t as efficient as today. We couldn’t talk to relatives thousand miles away, we couldn’t share what inside our heads, i couldn’t write things like this and you’re reading it now.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Love your computers, love your electronic devices, become better users and be better at troubleshooting your own goods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cheers and tack så mycket!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/misconceptions/&quot;&gt;Avoid Misconceptions from Now&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on September 30, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[One year in Sweden]]></title>
  <link rel="alternate" type="text/html" href="/blog/one-year-in-sweden/" />
  <id>/blog/one-year-in-sweden</id>
  <published>2015-09-07T00:00:00+02:00</published>
  <updated>2015-09-07T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;flashback&quot;&gt;Flashback&lt;/h3&gt;

&lt;p&gt;Sweden. Hmmm, i wasn’t expecting to be here actually. Upon arrival at Landvetter airport, 23th August last year, my first step into Sweden was full of doubt and uneasy feeling about everything. Yet, from second step towards, myriad of things started to get in places and embrace me to think, what was my motivation to pick Sweden as my next destination for study? Yes, Sweden is my dream. Going to one of the most underrated country in any measured parameters, e.g. GDP, living expectancy, quality of education, etc. Couldn’t be better than that.&lt;/p&gt;

&lt;h3 id=&quot;gteborg&quot;&gt;Göteborg&lt;/h3&gt;

&lt;p&gt;I took a ride on what is described as &lt;em&gt;Flygbussarna&lt;/em&gt;, or airport coach. It’s a shuttle bus connecting Landvetter and Göteborg. On that 25 minutes trip, I did discover Göteborg is quite good looking city with quite awe sceneries.&lt;/p&gt;

&lt;p&gt;In a year, I have visited several cities in Scandinavia. Stockholm is pretty big, Copenhagen as well, Malmö is growing, Jönkoping is somewhat, quiet and very laidback. However, Göteborg is perfect for my taste. The city has everything from what you expect from a A-rated city in Europe. It has big port, beach, modern part of the city, educational sites, islands, old parts of the city also pretty well reserved.&lt;/p&gt;

&lt;p&gt;For an entire year, the transportation in Göteborg is definitely something to be highlighted on. &lt;em&gt;Västtrafik&lt;/em&gt;, the consorsium behind this splendid 
transportation system, utilizing tram, bus and ferry, got my highest admiration since then. Even, as compared to several big cities, e.g. Amsterdam or Hannover. Göteborg’s average waiting time on each stops is significantly faster than any of mentioned cities. Probably, size of the city has to be considered and taking the weight on number of population in Göteborg that’s not too.&lt;/p&gt;

&lt;h3 id=&quot;chalmers&quot;&gt;Chalmers&lt;/h3&gt;

&lt;p&gt;Chalmers University of Technology. As people argued, probably it is the best technical university in Sweden. And what do you expect from Chalmers at this level? I did not want to expect anything, but everything is way better than my previous campus. The education pace, the labs, impact of the research, the professor, the classmates, study groups and every activities. The campus itself is not that big, it is perfect for any students who likes to walk. Lot of trees, the terrain is not flat at all, and surrounded by small paths.&lt;/p&gt;

&lt;p&gt;As the bureaucracy system, everything is self serviced, available and provided by the intranet of the campus and are accessible through VPN almost anywhere. Yes, almost anywhere. You can print your documents almost from anywhere using PRISMA printer service. The print quota is always topped up every new semester.&lt;/p&gt;

&lt;p&gt;And the exam…Hmmm…Yeah, it’s hard, but realizing that exam is independent to the course itself, I can decide whenever I want to take exam in no hurry. And yes, it’s non stressful system I must say.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/one-year-in-sweden/&quot;&gt;One year in Sweden&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on September 07, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Addition vs Multiplication]]></title>
  <link rel="alternate" type="text/html" href="/blog/addition-vs-multiplication/" />
  <id>/blog/addition-vs-multiplication</id>
  <published>2015-09-05T00:00:00+02:00</published>
  <updated>2015-09-05T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;OK, let’s settle this. If you’re given a question, which is faster, between addition and multiplication? Or in more formal concise way of problem set, given &lt;code&gt;x, y&lt;/code&gt; be two &lt;code&gt;integers&lt;/code&gt;. Which one is easier, an &lt;code&gt;addition&lt;/code&gt; or &lt;code&gt;multiplication&lt;/code&gt; for those two integers?&lt;/p&gt;

&lt;p&gt;I’d rather believe that people will spontaneously chose to add is faster than to multiply. But in what sense people think that way? A conceptual framework is needed to motivate this answer. And I’ll help you on this post.&lt;/p&gt;

&lt;p&gt;We’re going through some definitions here. &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;multiplication&lt;/code&gt; are examples of &lt;strong&gt;problems&lt;/strong&gt;. Some inputs, in this case &lt;code&gt;x, y&lt;/code&gt; are the inputs, or precisely, instances for which the problem has to solve. In principle, a problem has infinite instances that should be able to be solved.&lt;/p&gt;

&lt;p&gt;Problems are often solvable by &lt;strong&gt;algorithms&lt;/strong&gt;. Intuitively, an algorithm is an instruction saying how to do the calculation that solves the problem for every possible instance. It must be precise and unambiguous, such that it can be delegated to a machine. The steps of an algorithm must consist of simple operations which can be done mechanically, without human intervention or appeal to human intelligence. They must not leave any room for subjective interpretations.&lt;/p&gt;

&lt;p&gt;Computer programs are nowadays the way to execute algorithms, but algorithms existed already long before the advent of computers. The word is derived from the name &lt;em&gt;al-Khoarizmi&lt;/em&gt;, an Persian scholar (780–850) who wrote an early textbook on arithmetic calculations. Much earlier, various algorithms were already known to ancient mathematicians.&lt;/p&gt;

&lt;p&gt;Examples of algorithms are the well-known “school methods” for adding or multipling two numbers on paper. These methods fulfill all the above criteria. They specify which simple operations with digits we have to do in which order, and how these partial results have to be combined to the correct final result.&lt;/p&gt;

&lt;p&gt;We stress that an algorithm and a computer program is not the same thing! A program implements an algorithm, i.e., it realizes an algorithm in a specific programming language. But an algorithm as such is an abstract mathematical entity. This distinction is more than just academic hair-splitting, rather, it has two major practical consequences.&lt;/p&gt;

&lt;p&gt;OK, then which one is the answer mister?&lt;/p&gt;

&lt;p&gt;The answer lies on what we know with &lt;strong&gt;Time Complexity&lt;/strong&gt;. Good luck study on this guys. Welcome to the Algorithm class.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/addition-vs-multiplication/&quot;&gt;Addition vs Multiplication&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on September 05, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[What's Wrong with May Weather?]]></title>
  <link rel="alternate" type="text/html" href="/blog/summer/" />
  <id>/blog/summer</id>
  <published>2015-06-04T00:00:00+02:00</published>
  <updated>2015-06-04T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;season-in-gothenburg&quot;&gt;Season in Gothenburg&lt;/h3&gt;

&lt;p&gt;If we talk about season in western archipelago of Sweden, then Gothenburg, so to speak, is representing what you may call unforeseen forecasted weather. It is May already, several parts of Europe already bathing in 20-hours of sunlight, pretty close to body temperature warmth that attracts Summer’s Mood of everyone to come out. However, it is still 10 Degree Celcius here in Gothenburg. Valkommn till Sverige!&lt;/p&gt;

&lt;h3 id=&quot;so-whats-next&quot;&gt;So, What’s Next?&lt;/h3&gt;

&lt;p&gt;Prepare for the worst. It’s a routine to check today’s weather before you leave home. Always make sure to dress properly and do not forget to bring your worst case suit all the time. I do prefer wearing my trusty waterproof hardshell everytime anytime, probably with fleece and a shirt. Always come with spare of shirts and socks on the backpack.&lt;/p&gt;

&lt;h3 id=&quot;killing-time&quot;&gt;Killing Time&lt;/h3&gt;

&lt;p&gt;The weather can change quickly. Always think positive, if you don’t wanna get &lt;em&gt;jinxed&lt;/em&gt;. When the weather is good, just enjoy. Do not think about probability of raining or cloud will come in a glimpse of your eye.&lt;/p&gt;

&lt;h3 id=&quot;so-what&quot;&gt;So What?&lt;/h3&gt;

&lt;p&gt;Sweden is pretty country. Gothenburg itself is amazing. Fantastic public transportation, superb education and industry, big port and ships and the weather as well. So, please come and enjoy Gothenburg.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/summer/&quot;&gt;What&#39;s Wrong with May Weather?&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on June 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Network Security Recap]]></title>
  <link rel="alternate" type="text/html" href="/blog/netsec-exams/" />
  <id>/blog/netsec-exams</id>
  <published>2015-06-01T00:00:00+02:00</published>
  <updated>2015-06-01T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;h1 id=&quot;eda491--network-security&quot;&gt;EDA491 | Network Security&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;april-2015&quot;&gt;&lt;strong&gt;April 2015&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;IP fragmentation&lt;/strong&gt; is problematic in many situations. Consider a firewall or IDS system inspecting the traffic and mention &lt;strong&gt;three problems&lt;/strong&gt; related to fragmentation that may affect security. Describe the problems and what problems they may cause.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;IP fragmentation is a process to split up IP datagram into several packets of smaller size. Usually first fragment starts with ICMP message and the following fragmented packets are ICMP without header (like a beheaded datagrams).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;An IDS or firewall will have to check several informations found on the header, e.g. ID, Flag and Offsets and the size of the fragments. Small fragments could lead into an next fragment header overwrite, big fragments could lead into overlapping datagrams.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Teardrop attack&lt;/strong&gt; happens when there is a mismatch between offset length and the actual datagrams size. This caused an overlapping between datagrams and the overlapped part of the datagrams often used as a place to insert malicious information. When the reassembly is not properly concatenate all of the fragments, the attack will go undetected.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Overrun DoS&lt;/strong&gt; happens when the complete reassembled datagrams size is more than allowed IP packet 65,535 bytes. Processing data this large could lead the system into network crash state and resulted on Denial-of-Service.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Rose Attack&lt;/strong&gt; happens when there are too many incomplete fragments detected on the network. This kind of incomplete fragment usually is used to bypass IDR or to launch DoS attack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What is required by an attacker to do a &lt;strong&gt;blind insertion&lt;/strong&gt; of a packet into an ongoing TCP session between two other users? What is the &lt;strong&gt;countermeasure&lt;/strong&gt; we have in TCP against it? Is the solution good enough? How likely is the attacker to succeed?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When we are dealing with TCP connection, there is an established connection between two sides. Both of them have to maintain the sequences of the communication using sequence number for their packets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;An attacker that wants to perform blind insertion, should have a knowledge about target IP address and try to catch the sequence number prediction as soon as the initial 3-way handshake is finished. However, when both sides are using random number to generate the sequence number, then the attacker is completely blind and it is very hard in practice. Sequence number has 32-bits of length in the TCP header, thus 2^32 chances are too much for the attacker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Describe in some detail the process of how a &lt;strong&gt;certificate&lt;/strong&gt; is used, i.e. how the owner’s identity can be verified by another party! What does the receiver of the certificate do? How is the certificate distributed to the receiver?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When user receives developer’s certificate, it contains the CA’s private key that’s signed by the developer. CA’s public key that comes with the preloaded certificates within browser is used to check the integrity of the developer’s certificate. A hash of this preloaded certificate is created and encrypted then compared to the one comes with the developer’s certificate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;To check the owner’s identity, basic digital signature is used. User can challenge the owner to encrypt the data using its private key and later on user can use owner’s public key to decrypt and make sure that the owner is the one it supposed to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Identity management&lt;/strong&gt; (IDM) is a relatively new field. What is the fundamental problem IDM tries to solve?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Identity management put the security measure closer to the center and control oriented. It brings the consciousness of security aware in full control from the organization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If a dishonest supplicant can both send and listen to the traffic between the Authenticator and the &lt;strong&gt;Radius&lt;/strong&gt; server, it is possible to do a number of attacks. Give one example of an &lt;strong&gt;attack against the shared secret&lt;/strong&gt; and one against someone else’s password!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If the dishonest supplicant observed valid Access-Request (ARq) and associated Access-Accept (AA) or Access-Reject (ARj), then it is possible for the supplicant, now a potential attacker, to perform exhaustive attack on &lt;strong&gt;shared_secret&lt;/strong&gt; within response_authenticator part of the response. The attacker will compute MD5 state for &lt;strong&gt;code&lt;/strong&gt; + &lt;strong&gt;ID&lt;/strong&gt; + &lt;strong&gt;length&lt;/strong&gt; + &lt;strong&gt;request_auth&lt;/strong&gt; + &lt;strong&gt;attribute&lt;/strong&gt; which are known. The attacker will then resume the hash once for each shared secret &lt;strong&gt;guess&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Radius uses stream cipher and good attacker can find information about the rate of authentication limit imposed by the client. First, attacker attempts to authenticate to the client using fake username and password. The authenticator will try to send AR to the &lt;strong&gt;Radius&lt;/strong&gt; server. Attacker captures AR and replay the AR to the &lt;strong&gt;Radius&lt;/strong&gt; using different variations of password. If the server does not impose rate authentication limit, then this attack can be performed in an exhaustive way to find correct password.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What is a &lt;strong&gt;DMZ&lt;/strong&gt;, where is it located and what &lt;strong&gt;purpose&lt;/strong&gt; does it have?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DMZ or demilitarized zone, or perimeter network, is an external network outside the local network that runs several services, e.g. web servers, mail servers etc to avoid forwarding traffic to the internal (local) network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You are now given the task to connect a small office network to the Internet and a firewall is needed. Assume that you are considering two different rather cheap firewall configurations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a stateless firewall, &lt;strong&gt;OR&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;NAT gateway that takes care of security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;compare the two solutions and discuss advantages and disadvantages with them. Discuss what types of attacks they may be vulnerable against, if any.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Stateless&lt;/strong&gt; firewall watch network traffic, working and decisions are taken by rules on source or destination addresses. This firewall does not aware about the state of the connection, e.g. TCP sequence number, traffic patterns or data flow. Lot of packets can be rogue and let this alone enough to lead the system prone to &lt;strong&gt;spoofing attack&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NAT&lt;/strong&gt; gateway works by looking at the translation table. Thus, it is as good as the table is. It works like a firewall with default setting set to ‘not letting’ any connections that are not originated from the network. However, NAT gateway still can be attacked, not by spoofing attack, but with &lt;strong&gt;SYN flood&lt;/strong&gt; or ping-of-death that does not harm the main security measure of the system, but will lead to the denial-of-service (&lt;strong&gt;DoS&lt;/strong&gt;) problem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the picture above, &lt;strong&gt;two firewalls&lt;/strong&gt; not specially designed for this purpose, are placed in parallel by someone believing they could increase both reliability if one fails and improve performance by sharing the load. Does this work? List some problems with this approach!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;From &lt;strong&gt;redundancy&lt;/strong&gt; point of view, in order to keep both of the firewalls at the same state everytime, the switch has to broadcast every packets. It is doable and easy, however the problem arise when we have two same state firewalls that forward exactly same packets. This will create duplicate of packets that is not good for the network. So, one of the firewall must halt the forwarding when the other firewall, let say the &lt;strong&gt;primary firewall&lt;/strong&gt; works 100% well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;From &lt;strong&gt;performance&lt;/strong&gt; point of view, load sharing ideally performed by stripping packet per packet and let the packets forwarded to each of the firewalls in order. However, this doesn’t really work since TCP is connection based and for each session, the connection has to be maintained between both sides.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SSL consists of several protocols. Describe the functionality of the record layer, change cipher, alert and handshake protocols!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Record layer&lt;/strong&gt; performs fragmentation &amp;gt; compression &amp;gt; MAC &amp;gt; encryption. 
&lt;strong&gt;Change cipher&lt;/strong&gt; tells the other side about last security parameter negotiated and starts the encryption phase
&lt;strong&gt;Alert&lt;/strong&gt; protocol sends warning and error messages to the other side
&lt;strong&gt;Handshake&lt;/strong&gt; protocol negotiates cipher key, exchanging public key and certificate, and performs authentication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first &lt;strong&gt;SSL&lt;/strong&gt; messages exchanged between the client and the server are the &lt;strong&gt;HELLO&lt;/strong&gt; messages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;{ verC&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;r1&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;sid&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;ciphers&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;comps } -&amp;gt; server&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;{ verS&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;r2&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;sid&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;cipherA&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;compA } &amp;lt;- server&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Explain clearly what each field &lt;strong&gt;contains&lt;/strong&gt; and the purpose of it (what it is used for)!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;verC&lt;/strong&gt; is the highest protocol that’s supported by the browser (client side). 
&lt;strong&gt;r1&lt;/strong&gt; is the unique nonce from client side (&lt;strong&gt;r2&lt;/strong&gt; is from server side) that is used for limited time (one occasion). It is a random number that will be used for key generation later. 
&lt;strong&gt;sid&lt;/strong&gt; or session ID is the number for identifying the session, new connection start from 0 and non-zero &lt;strong&gt;sid&lt;/strong&gt; means that clients want to resume existing connection.
&lt;strong&gt;ciphers&lt;/strong&gt; is a list supported cipher suite by the client side, while &lt;strong&gt;cipherA&lt;/strong&gt; is the cipher suite that is selected by the server.
&lt;strong&gt;comps&lt;/strong&gt; is a list of compression that can be used for compressing the payload. &lt;strong&gt;compA&lt;/strong&gt; is the compression method that is selected by the server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In &lt;strong&gt;IPsec tunnel&lt;/strong&gt; mode, a new IP header is created. Why? Why is this not necessary in transport mode? Explain!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Because in &lt;strong&gt;tunnel&lt;/strong&gt; mode, header is needed due to the presence of gateway. Tunnel mode isn’t like &lt;strong&gt;transport&lt;/strong&gt; mode which the datas are completely decrypted and unpacked by end point, instead the gateway is the one who does that then forward the necessary packets (decrypted) to the end user. Thus, in &lt;strong&gt;tunnel&lt;/strong&gt; mode, one of the advantage is the user doesn’t have to implement &lt;strong&gt;IPSec&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mention &lt;strong&gt;five typical functions&lt;/strong&gt; that characterize a &lt;strong&gt;security protocol,&lt;/strong&gt; i.e. things you would expect to find in a protocol that is supposed to be secure. For each such function, explain its purpose (why it is there) and give an example of how it can be solved/implemented.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In practice, implementation of security protocol is quite close with each other and several functions are being used many times due to the performance, reliability and the practicality. From &lt;strong&gt;algorithm negotiation&lt;/strong&gt;, &lt;strong&gt;key exchange&lt;/strong&gt;, &lt;strong&gt;data integrity&lt;/strong&gt;, &lt;strong&gt;two-step verification&lt;/strong&gt; and &lt;strong&gt;security protection&lt;/strong&gt; or measure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Algorithm negotiation&lt;/strong&gt; usually is performed at early phase, e.g. SSL and SSH, to determine what kind of cipher suite or encryption algorithm to be used later on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Key exchange&lt;/strong&gt; is necessary for both sides to get to know the master key to be used for the encryption. Usually it implements Diffie-Helmann or RSA key exchange algorithm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Data integrity&lt;/strong&gt; means that the encrypted data should not be changed while transmitting. To maintain the data integrity, one way encryption, e.g. Hash MD5 or HMAC can be used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Two-step verification&lt;/strong&gt; is needed when typical username &amp;amp; password combinations is not enough. Usually it is implemented by asking the user something using questions, e.g. watermark, captcha, etc. The answer for this kind of questions is precomputed and saved alongside the sessions in the server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Security protection&lt;/strong&gt; has to be carried out to maintain the confidentiality, integrity and authenticity of the communications. We speak this because there is always a non-zero chance that a dishonest user or a man-in-the-middle that wants to exploit some of the weakness in our security protocols. Several specific protections are &lt;strong&gt;replay-attack&lt;/strong&gt; protection by utilizing sessions token,  protection for &lt;strong&gt;MiTM&lt;/strong&gt; using mutual-authentication and PKI&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How does &lt;strong&gt;WEP&lt;/strong&gt; prevent packets from being modified? Is this mechanism sufficient, or does it result in any (known) security problems? Give some details!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;No, WEP doesn’t guarantee a modification of the packets. WEP uses &lt;strong&gt;CRC&lt;/strong&gt; feature to enable data integrity check later on. Simple CRC implementation basically takes several bits of the datas and append them on the last part of the datas. It is possible to find out what &lt;strong&gt;bit is changed on the checksum&lt;/strong&gt; when input is changed. Thus, it is possible for an attacker to resolve this and do some modifications on the datas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;WEP has at least one problem with its handling of IVs. Explain how an attacker may use this weakness! Is this problem likely to occur?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WEP allows IV to be reused. That means two packets can be encoded/encrypted using stream cipher with same IV &amp;amp; shared keys. That means, &lt;strong&gt;XOR&lt;/strong&gt; operations of those two ciphertexts will also affect &lt;strong&gt;XOR&lt;/strong&gt; operations on the cleartexts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;c1 &lt;strong&gt;xor&lt;/strong&gt; c2=(p1 &lt;strong&gt;xor&lt;/strong&gt; b) &lt;strong&gt;xor&lt;/strong&gt; (p2 &lt;strong&gt;xor&lt;/strong&gt; b) = p1 &lt;strong&gt;xor&lt;/strong&gt; p2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If one of the cleartext is longer than the other, then the longer part could be revealed. And since the IV is merely 24-bit, it is likely reused by busy AP (Access Points).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some more advanced switches may have more &lt;strong&gt;intelligent&lt;/strong&gt; functionality than a simple €10 switch, and can prevent some &lt;strong&gt;link-layer&lt;/strong&gt; attacks. Describe two such possible functions and what kind of attacks they protect against!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If we are on link-layer attack, mostly the protection is all about MAC addresses. We can &lt;strong&gt;limit the number MAC addresses&lt;/strong&gt; on specific ports. By limiting this, it will prevent broadcast message flooding to all ports by specific MAC address. Other solution is to &lt;strong&gt;implement trust&lt;/strong&gt; on specific ports. With this we are limiting what ports to answer specific requests. Going further and more detail, we can limit &lt;strong&gt;one MAC one port&lt;/strong&gt; thus limiting the functionality as well. Also, MAC-spoofing protection is feasible to do by performing monitoring both for IP and MAC.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;DHCP spoofing&lt;/strong&gt; is another problem advanced switches can deal with. What is DHCP spoofing? And how can it be dealt with by a switch?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An attacker may intercept the DHCP request message and give an answer. That means the attacker becomes &lt;strong&gt;man-in-the-middle&lt;/strong&gt;. The trusted ports function implemented by the switch only allow associated ports to answer this DHCP request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;p&gt;### &lt;strong&gt;August 2014&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Give one example each of a &lt;strong&gt;Link Layer&lt;/strong&gt;, &lt;strong&gt;Network Layer&lt;/strong&gt; and &lt;strong&gt;Transport Layer&lt;/strong&gt; attack! Clearly explain how each attack works and what the possible results of it may be&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In link layer, &lt;strong&gt;ARP spoofing&lt;/strong&gt; is one of the attack example. ARP is like a question message about who has certain IP address. When there is a reply (ARP reply), ARP updates the ARP table with the IP address and its associated MAC address. Attacker could spoof the MAC address thus mismatch the IP-MAC relation in the table. By this, letting the traffic to be routed to attackers MAC. The &lt;strong&gt;countermeasure&lt;/strong&gt; for this is &lt;em&gt;antidote&lt;/em&gt; patch like in Linux. The host check the old MAC first before accept new MAC.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In network layer, every abuse about IP header can be considered potentially harmful. For example, &lt;strong&gt;IP spoofing&lt;/strong&gt; attack, is an attack on which the attacker send malicious packets using victim’s IP address as source IP address. With this, the attacker can hide his identity and potentially exploit the trusted connection between two sides.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In transport layer, anyone can insert malicious data in UDP packet. This leads an &lt;strong&gt;UDP attack&lt;/strong&gt;. This attack is done by inserting malicious information within UDP datagram into the host. It is hard to detect because there is sequence number in UDP packets. Another good example is &lt;strong&gt;SYN flooding&lt;/strong&gt; attack. Attacker sends SYN flooding from many zombie clients into one host. This makes the host to send SYN/ACK to any zombies in such a short time. Probably will lead into chaotic denial-of-service problem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The goal of some &lt;strong&gt;DoS attacks&lt;/strong&gt; is to try to exhaust the resources of the target, for example memory, internal tables, network or the CPU. Describe two possible DoS attacks targeting different resources, how they work and what weaknesses they make use of!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DoS attack usually targets several different resources. &lt;strong&gt;Reflection attack&lt;/strong&gt; is an example of DoS attack that target the bandwidth of the victim to be exhausted. This attack is initiated by an attacker doing an authentication with the victim A. After A sent a challenge request to the attacker, it opens new connection to the B and forward that &lt;strong&gt;challenge request&lt;/strong&gt; from A to B. The response from B to the attacker, then forwarded back to A. Without careful inspection, if we have lot of B, then there will be lot of open connections between A and Bs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Another DoS attack that targets internal resource is &lt;strong&gt;SYN flooding&lt;/strong&gt; attack. Attacker sends SYN flooding from many zombie clients into one host. This makes the host to send SYN/ACK to any zombies in such a short time and wasting lot of victim’s resources. Probably will lead into chaotic denial-of-service problem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Explain how &lt;strong&gt;encryption&lt;/strong&gt; of data traffic is done in &lt;strong&gt;WEP&lt;/strong&gt;! A figure together with explaining text is needed. You need to discuss how encryption is done, all input and output&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Well, WEP uses &lt;strong&gt;stream cipher&lt;/strong&gt; that takes IV + key (seed) as an input to the RC4 symmetric cipher algorithm to produce keystream. The keystream bit length is exactly the same with the stream plaintext of datas. Then &lt;strong&gt;XOR operation&lt;/strong&gt; is performed between the keystream and the plaintext. The ciphertext is produced and then used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even though WEP encrypted traffic contains an &lt;strong&gt;encrypted checksum&lt;/strong&gt; or CRC, it cannot prevent an attacker from modifying the packets. Explain why this is possible and explain how WEP should have been designed to avoid this problem!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WEP uses &lt;strong&gt;CRC&lt;/strong&gt; feature to enable data integrity check later on. Simple CRC implementation basically takes several first bits (24-bits if we use CRC24) of the datas and append them on the last part of the datas. It is possible to find out what &lt;strong&gt;bit is changed on the checksum&lt;/strong&gt; when input is changed. Thus, it is possible for an attacker to resolve this in exhaustive fashion and do some modifications on the datas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mention briefly two things &lt;strong&gt;TKIP&lt;/strong&gt; (temporal key integrity protocol, present &lt;strong&gt;in WPA&lt;/strong&gt;) does to enhance security?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TKIP ensures the encryption key not static or changeing over time. It extends the regular IV into EIV by incorporating MAC address as a input for pseudo random generator. Another purpose is to make sure that the sequence number of the packets is unique thorough all the communication sessions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Give six examples of different types of rules to filter traffic that a &lt;strong&gt;screening router&lt;/strong&gt; likely would have! You may use text or your own “pseudo-language” for the filter rules as long as they are possible to understand (comments to the rules are necessary).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Screening router is a stateless firewall. This means that the screening router doesn’t have capabilities to check the state of connections. Several common filter that we should have are:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;reserved IP address&lt;/strong&gt;
source_addr : 0.x.x.x &amp;gt; DROP | &lt;strong&gt;never used 0.x.x.x net&lt;/strong&gt;
source_addr : 127.x.x.x &amp;gt; DROP &lt;strong&gt;localhost  should be used internally&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;broadcast and multicast address&lt;/strong&gt;
source_addr : x.x.255.255 &amp;gt; DROP | &lt;strong&gt;multicast source should be dropped&lt;/strong&gt;
source_addr : x.x.x.x, y.y.y.y &amp;gt; DROP | &lt;strong&gt;multicast source should be dropped&lt;/strong&gt;
dest_addr : x.x.x.x, y.y.y.y &amp;gt; DROP |  &lt;strong&gt;tcp doesn’t utilize multicast&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;malformed packet&lt;/strong&gt;
flag SYN=1 &lt;strong&gt;and&lt;/strong&gt; FIN=1 &amp;gt; DROP | &lt;strong&gt;never ever SYN &amp;amp; FIN in same packet&lt;/strong&gt;
if &lt;strong&gt;tiny_fragment&lt;/strong&gt;=1, DROP | &lt;strong&gt;tiny fragment is dangerous&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;block ICMP reply&lt;/strong&gt;
protocol : ICMP, flag: reply &amp;gt; DROP | &lt;strong&gt;prevent smurf attack&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the course we have discussed several ways to &lt;strong&gt;evade IDS&lt;/strong&gt; systems and &lt;strong&gt;firewalls&lt;/strong&gt;. One problem for the IDS system is to select proper timeouts for IP fragment reassembly. Why is this problematic? Give two examples of what would happen if the IDS system selects a too long or too short timeout!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When fragmented packets are received, there has to be a timeout before unfinished fragment will be dropped. If the timeout duration in IDS is shorter, there is a chance that the fragments will be dropped while the target system may find the fragment is complete datagram. If the timeout duration in IDS is longer, then IDS will find that the fragments discarded in target system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;TTL&lt;/strong&gt; can sometimes also be used to fool firewalls and intrusion detection (IDS) systems. How? Mention a possible protection mechanism against this attack.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Low TTL value can cause fragments or packets to be discarded due to early timeout. This in turn may leads to a situation where IDS and target host receiving different meaning of what had been communicated through the communications. Border routers could normalize TTL value to, let say 20.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are given the task to test whether a &lt;strong&gt;firewall&lt;/strong&gt; is &lt;strong&gt;stateful&lt;/strong&gt; or &lt;strong&gt;not&lt;/strong&gt;, how would you do this? Describe what you do (send) and the expected result! Explain clearly why this test would work!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To check for the statefulness of a firewall, we may send ACK message and check for the result. If the firewall is stateless, it doesn’t read the state of the connection and then will forward the ACK to the destination. Normal systems &lt;strong&gt;will respond the ACK with RST&lt;/strong&gt; if the ACK doesn’t belong to a known session. If the firewall is stateful, then the ACK message will be dropped.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;NAT gateways&lt;/strong&gt; are strictly speaking not firewalls, but they are still useful and can in many situations replace a conventional firewall. Why?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NAT&lt;/strong&gt; helps to &lt;strong&gt;hide&lt;/strong&gt; the internal systems from the outer network. Any information that is not inside NAT’s translation table is not visible. Also, NAT doesn’t inspect any traversed packets, thus it grants better performance metrics. For the application, NAT gateways are suitable for small network or home users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the last page, there is a picture of an &lt;strong&gt;IPsec&lt;/strong&gt; header. Explain what the next header, SPI and padding fields are used for and what purposes they have!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Next header&lt;/strong&gt; tells what upper layer protocol should receive the data.
&lt;strong&gt;SPI&lt;/strong&gt; is an index that tells what kind of SA (Security Association) to be used.
&lt;strong&gt;Padding&lt;/strong&gt; field is to disguise to an attacker about the actual amount of the datas being transmitted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;IKE&lt;/strong&gt; is a protocol often used together with IPsec. What does it do (mention its three main functions)?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;IKE or Internet Key Exchange is used for establishing crypto session keys, negotiate ciphers suite and performing two-sides verification.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The figure on the last page shows the &lt;strong&gt;SSL handshake&lt;/strong&gt; protocol and how a client and a server exchange information. Explain briefly the messages, what they contain and their purpose/function!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the &lt;strong&gt;Hello&lt;/strong&gt; part, basically client and server are just exchanging information about &lt;strong&gt;random numbers&lt;/strong&gt;, &lt;strong&gt;ciphers suite&lt;/strong&gt; and &lt;strong&gt;session ID&lt;/strong&gt;. Then server sends certificate that is signed and verified by the Certificated Authority (CA), alongside with server’s Public Key. Then browser verifies the certificate with the one loaded into the browser. If it is verified that the certificate comes from the trusted CA. If there is no public key shared between client and the server, then extra step &lt;strong&gt;server key exchange&lt;/strong&gt; is needed. Later on, client responded by sending &lt;strong&gt;client key exchange&lt;/strong&gt; that consists shared key secret encrypted using server’s public key. Then the server is authenticated, everything is done and client ends the phase sending &lt;strong&gt;client finished&lt;/strong&gt;. Last phase is all about sending cipher spec where both sides negotiate about everything based on previously happened communication. This phase ends the handshake because everything will be encrypted after this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SSH (Secure Shell) offers a concept called &lt;strong&gt;port forwarding&lt;/strong&gt;. What is it? What functionality does it offer? Explain with 2-3 sentences, not more.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The SSH client opens a local port (e.g. 80) and local applications can connect to it. All data written (and read) is &lt;strong&gt;sent&lt;/strong&gt; encrypted &lt;strong&gt;to&lt;/strong&gt; the &lt;strong&gt;SSH server&lt;/strong&gt; which decrypts it and &lt;strong&gt;forwards&lt;/strong&gt; it &lt;strong&gt;to&lt;/strong&gt; the final &lt;strong&gt;target&lt;/strong&gt; (in this case, a &lt;strong&gt;web server&lt;/strong&gt; at the other end).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When port forwarding is used, SSH opens a number of ports. This may enable attacks by other users, local and remote. Explain!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Basically, a port &lt;strong&gt;doesn’t offer access control.&lt;/strong&gt; Establishing port forwarding to certain port will make end user to that port vulnerable to an intruder. Thus that means that everyone can connect to the port and access the service (sending datas to the remote server). On multi user systems, this is a bad thing because there will be numerous of users that could communicate with corresponding port and access the remote server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;p&gt;### &lt;strong&gt;May 2014&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are several ways to &lt;strong&gt;scan&lt;/strong&gt; networks and systems, for example with &lt;strong&gt;SYN&lt;/strong&gt; and &lt;strong&gt;ACK&lt;/strong&gt; scans. Explain the difference(s) between these two types and describe what the expected results from them are. It should be obvious from your answer that there is a reason why scanning tools offer different methods to scan systems.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Both SYN and ACK scans follow the TCP 3-way handshake sequences to conform specific purposes. SYN scan will &lt;strong&gt;probe ports&lt;/strong&gt; on the target host with TCP message with &lt;strong&gt;SYN flag&lt;/strong&gt; is &lt;strong&gt;set to 1&lt;/strong&gt;. If there is a SYN/ACK result from the target host, then there is an open port in the host. If there is a RST result, then the port is closed. If there is no reply, there is a firewall in between.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;ACK scan is performed to &lt;strong&gt;check the state&lt;/strong&gt; of the firewall. If you got the RST, then there is an either closed or open port on the target host. If there is no reply, then maybe the packet is &lt;strong&gt;filtered&lt;/strong&gt; by stateful firewall or there is no host at all.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;UDP scanning is harder to do than TCP scanning. Why? How can operating systems, at least to some degree, protect themselves against this type of scanning?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Because UDP doesn’t maintain the connection (like TCP, which maintain the connection state using TCP sequence number). Thus, we never really know whether the packet is dropped or silently accepted. If there is no host open, then we will get &lt;strong&gt;ICMP Unreachable Host&lt;/strong&gt; reply. A protection can be implemented, e.g. limiting the number of ICMP reply rate (1 reply per second) to avoid ICMP flood.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Give two examples of attacks against IP (one sentence per attack is enough)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;First is &lt;strong&gt;IP spoofing&lt;/strong&gt; attack. IP spoofing is when an attacker send a packet to a target host with the victim’s IP address set as the source IP in the header. Attacker uses this to hide their true identity and to exploit trust connection between victim and the target host.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Second is &lt;strong&gt;LAND&lt;/strong&gt; attack. It is performed by sending a packet to the victim with victim’s IP address set as both the source and destination IP in the message header. This attack will produce bug that leads to a system crash.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The allocation of &lt;strong&gt;SYN cookies&lt;/strong&gt; is a possible defense against &lt;strong&gt;SYN flooding&lt;/strong&gt; DoS attacks. The defense is to store a SYN cookie in the initial serial number (ISN) selected by the server:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ISN = hash ( src and dest IP &amp;amp; port addr + secret + client’s ISN )&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is a &lt;strong&gt;SYN flooding&lt;/strong&gt; attack? Also explain clearly why SYN cookies can offer protection and why it works! Are there any drawbacks or problems with this method?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;After receiving SYN message, target host will allocate internal resource to maintain the state of the connection and then return SYN/ACK message. When attacker keep sending SYN message in a very frequent fashion, then eventually the resource will be &lt;strong&gt;exhausted&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The idea of &lt;strong&gt;SYN cookies&lt;/strong&gt; is the target host will not save the state internally. Instead, they will let the client to save their own state. The state contained inside ISN that will be compared with what client sends back later on. If there is no ACK (unfinished handshake), then ISN is discarded. If there is an ACK reply from the client (either from attacker or from legitimate client), the ACK will be compared with the ISN to check the integrity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The &lt;strong&gt;drawback&lt;/strong&gt; of  SYN cookies is all about performance. The hash function will take some computation time obviously that the attacker should consider.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Written&lt;/strong&gt; by &lt;a href=&quot;http://januaditya.com&quot;&gt;Yanuar T. Aditya&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/netsec-exams/&quot;&gt;Network Security Recap&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on June 01, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Dreamhack]]></title>
  <link rel="alternate" type="text/html" href="/blog/dreamhack-memory/" />
  <id>/blog/dreamhack-memory</id>
  <published>2015-05-26T00:00:00+02:00</published>
  <updated>2015-05-26T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Last yea November, I was in Dreamhack Winter 2014, Jönkoping. I was there with three friends of mine. David &amp;amp; Sushil, both are my classmates and avid Dota 2 fans (same with me), and Raymond. Raymond is from States and prolific Hearthstone player.&lt;/p&gt;

&lt;p&gt;We left Göteborg at Saturday while Dreamhack took place since Wednesday. It was quite cold but there was no sign of snow coming in. I still remember when we arrived at Jönkoping Bus Terminal, we encountered several gamers sleeping in the terminal with their PCs inside their sleeping bag. Duh, those guys need some serious sleep after days of sleepless gaming I suppose.&lt;/p&gt;

&lt;p&gt;WE ARE IN DREAMHACK DUDE!&lt;/p&gt;

&lt;p&gt;I don’t know but Dreamhack is something very special to me. I know Dreamhack since 2004 when I played World of Warcraft III for the first time. I know there was Starcraft back then that’s quite popular on some unknown event called Dreamhack. But I know that it is a serious stuff 3 years later when I was in 2nd year on college. I started to play Dota and with generous help from so-thing-called Internet, I’ve found what I need about Dreamhack.&lt;/p&gt;

&lt;p&gt;Back then I’ve put Dreamhack into my bucket list of place I must visit once in my life and in 2014, I was in Dream-come-true-Hack 2014! LIVE from Sweden! I met several pro players of Dota 2 and casters, e.g. whole Evil Geniuses, Cloud Nine, Virtus Pro, Sheever, LD, SingSing and not to mention [A] legends, Lod[A] and [A]kke.&lt;/p&gt;

&lt;p&gt;Can’t wait for this year Dreamhack Winter again to visit!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/dreamhack-memory/&quot;&gt;Dreamhack&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on May 26, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Superspring]]></title>
  <link rel="alternate" type="text/html" href="/blog/superspring/" />
  <id>/blog/superspring</id>
  <published>2015-04-22T00:00:00+02:00</published>
  <updated>2015-04-22T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;tic toc&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#first-failed-exam&quot; id=&quot;markdown-toc-first-failed-exam&quot;&gt;First Failed Exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#first-bike-oh-wait&quot; id=&quot;markdown-toc-first-bike-oh-wait&quot;&gt;First Bike, oh Wait…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#first-sakura-sightseeing&quot; id=&quot;markdown-toc-first-sakura-sightseeing&quot;&gt;First Sakura Sightseeing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h3 id=&quot;first-failed-exam&quot;&gt;First Failed Exam&lt;/h3&gt;

&lt;p&gt;Two exams in 4 days, 1 whole week of preparation, just to study the first one. Looking down at the latter. Result? 21 from 60. Couldn’t even get PASS result.&lt;/p&gt;

&lt;p&gt;Do I feel regret? Yes of course, but from 8 problems of nightmare, what could even be worse than somebody triggered the class fire alarm right in the middle of the exam?&lt;/p&gt;

&lt;p&gt;Watching the exam guards walking in and out, while thinking on how to mitigate this chaotic situation. Well, I was thinking that maybe they will move us to a new class. But then, those guys just came in with earplug instead. Later on, thanks God, finally one guy raised his hand and asking if there’s any better solution than just wearing earplug. Then here it comes, the &lt;code&gt;whoa&lt;/code&gt; moment. One of the guard asking all of us to raise our hands if we would like to have new room. How many people do you think raised their hands?&lt;/p&gt;

&lt;p&gt;Two…&lt;/p&gt;

&lt;h3 id=&quot;first-bike-oh-wait&quot;&gt;First Bike, oh Wait…&lt;/h3&gt;

&lt;p&gt;I used to have a bicycle in Indonesia. It was a roadbike and I hate it. Because I did not like it. The road condition was terrible, slightly better than Cyprus rally courses I presume. Also, lot of dust and the worst part is too many humans in the street, either walking or riding vehicles.&lt;/p&gt;

&lt;p&gt;Now, after 8 months in Sweden, I’m ready to have my own bike. But my God, everything is not cheap in here. Even second hand 3-years ago bike. I really admire Lance Armstrong, even now. I know Trek was famous before Lance used it on pro tour. Known for its superlight frame, sophisticated design and in-house Bontrager non-moving components gives you a thrill whenever you look at every Trek bikes in Gothenburg.&lt;/p&gt;

&lt;p&gt;Then, I’ve found someone selling Superfly 6, nonsense hardtail butted aluminum with SRAM components, Bontrager and FSA mixed all together. But, for 9000 SEK price? 2 years ago it was &amp;gt;10000, but now why it still hang in there?&lt;/p&gt;

&lt;p&gt;So, another wait I guess…&lt;/p&gt;

&lt;h3 id=&quot;first-sakura-sightseeing&quot;&gt;First Sakura Sightseeing&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img src=&quot;/images/post-sakura.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sweden is my first experience on winter, minus Celcius, and lot more. New addition is sakura! Swedish are very kind to plant cherry trees everywhere in Gothenburg and I have to admit, they’re beautiful.&lt;/p&gt;

&lt;p&gt;Saaaaa ku raaaaaaaaaa…&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/superspring/&quot;&gt;Superspring&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on April 22, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[d3.js on Jekyll]]></title>
  <link rel="alternate" type="text/html" href="/blog/first-d3js/" />
  <id>/blog/first-d3js</id>
  <published>2015-04-01T00:00:00+02:00</published>
  <updated>2015-04-01T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;

&lt;p&gt;So, &lt;a href=&quot;http://d3js.org&quot;&gt;d3.js&lt;/a&gt; has been around for a moment now and I guess it’s good time to start playing with it!&lt;/p&gt;

&lt;h2 id=&quot;trivia&quot;&gt;Trivia&lt;/h2&gt;

&lt;p&gt;It needs extra steps implementing d3.js onto Jekyll, especially when we’re working on Markdown instead of HTML. But, with
proper anchor, it’s like taking a candy from a baby. Cheers.&lt;/p&gt;

&lt;h2 id=&quot;first-bar-chart-with-div&quot;&gt;First Bar Chart with #div&lt;/h2&gt;

&lt;div class=&quot;second&quot;&gt; &lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://mbostock.github.com/d3/d3.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.second div {
  font: 10px sans-serif;
  background-color: steelblue;
  text-align: right;
  padding: 3px;
  margin: 1px;
  color: white;
}
&lt;/style&gt;

&lt;script type=&quot;text/javascript&quot;&gt;

var data = [4, 5, 6, 8, 12, 15, 16, 18, 21, 23, 27, 35, 42];

d3.select(&quot;div.second&quot;)
	.selectAll(&quot;div&quot;)
		.data(data)
	.enter().append(&quot;div&quot;)
		.style(&quot;width&quot;, function(d) { return (d) * 10 + &quot;px&quot;; })
    	.text(function(d) { return d; });

&lt;/script&gt;

&lt;h2 id=&quot;first-bar-chart-with-svg&quot;&gt;First Bar Chart with SVG&lt;/h2&gt;

&lt;div id=&quot;convas&quot; style=&quot;background: rgb(105, 187, 210)&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://mbostock.github.com/d3/d3.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
      var w = 535,
          h= 500,
          z = d3.scale.category20(),
          i = 0;
      var svg = d3.select(&quot;div#convas&quot;).append(&quot;svg&quot;)
          .attr(&quot;width&quot;, w)
          .attr(&quot;height&quot;, h)
          .style(&quot;pointer-events&quot;, &quot;all&quot;)
          .on(&quot;mousemove&quot;, heart_line);
      var line = d3.svg.line()
                    .interpolate(&quot;cardinal&quot;)
                    .x(function(d) { return d[0]; })
                    .y(function(d) { return d[1]; });
      function heart_shape(x, y, r)
      {
        var points = [];
        for (i=0; i&lt;=360; i=i+12){
          pointX = x -  r*(12*Math.sin(i*Math.PI/180) - 4*Math.sin(3*i*Math.PI/180));
          pointY = y -  r*(13*Math.cos(i*Math.PI/180) - 5*Math.cos(2*i*Math.PI/180) - 2*Math.cos(3*i*Math.PI/180));
          points.push([pointX, pointY]);
        }
        return points;
      }
      function heart_line() {
        var m = d3.svg.mouse(this); 
        svg.append(&quot;path&quot;)
            .attr(&quot;d&quot;, function() {return line(heart_shape(m[0], m[1], 1e-6)); })
            .style(&quot;stroke&quot;, function() { return z(parseInt(Math.random() * 100));})
            .style(&quot;fill&quot;, &quot;none&quot;)
            .style(&quot;stroke-opacity&quot;, 1)
            .style(&quot;stroke-width&quot;, 3.5)
            .attr(&#39;class&#39;, &#39;heart_shape&#39;)
            .transition()
            .duration(1000)
            .ease(Math.sqrt)
            .attr(&quot;d&quot;, function() { return line(heart_shape(m[0], m[1], 10)); })
            .style(&quot;stroke-opacity&quot;, 1e-4)
            .remove();
            }
&lt;/script&gt;


    &lt;p&gt;&lt;a href=&quot;/blog/first-d3js/&quot;&gt;d3.js on Jekyll&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on April 01, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[What to do in December?]]></title>
  <link rel="alternate" type="text/html" href="/blog/december-is-coming/" />
  <id>/blog/december-is-coming</id>
  <published>2014-12-11T00:00:00+01:00</published>
  <updated>2014-12-11T00:00:00+01:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Allright, now we’re in December. And Sweden is a land of OCD! Well, I mean OCD in a good way. Christmas mood starts at the end of November and that’s pretty early I must say. People are setting up their red coloured candles anywhere, light bulbs and obviously, Christmas Tree. Well, I don’t care at all about all of this. It just feels that I feel people are so motivated by the this &lt;em&gt;Jul&lt;/em&gt;, or Christmas, or Natal, or the-birth-of-Jesus.&lt;/p&gt;

&lt;p&gt;Anyway, I do not celebrate Christmas, and I will have full 3 weeks of holiday before exams starting next week. And 3 weeks is quite long I believe. Thus, I’m going to Iceland before Christmas and I’m planning to stay two days in Copenhagen right after it. And while I am so excited to go there, I feel there is something wrong with this trip. I don’t know why, but I feel that we’re gonna to Iceland, land of northern wild, land where ice and fire meet. A land so wild for a regular ordinary tropical dude like me and without that much of preparation…and money. It’s just I’m afraid I can’t visit every place on my stay there, e.g. volcano, glacier walk, chasing northern light, literally hot river, blue lagoon, and much more.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;First Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;19th Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Lab Demonstration&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Hope it will go great&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Göteborg Nils Ericson Terminal&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Travel to Copenhagen by Bus&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen Terminal&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Travel to Copenhagen Airport by Bus&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen Airport&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Travel to Kevlafik Airport, ICE by WOWAir®&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Second Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;20th Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Keflavik Airport&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Already in 20th December, time to go to Reykjavik&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reykjavik&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Check-in and buy stuffs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ICE in 1-Day Trip&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6-hours trip to:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Great Circle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Outskirt of Reykjavik&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Third Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;21st Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Wake up and buy stuffs, cooking meals&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reykjavik&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Local Trip guided by no-one&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Chasing Nortern Light Trip&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Whole night trip to watch earth’s wonder&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Fourth Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22nd Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Wake up (if still alive), buy stuffs, and make breakfast&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reykjavik&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Rent a car and explore:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Blue Lagoon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Hafnarfjordur&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reykjavik&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Another northern lights trip (optional)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Fifth Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;23rd Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Wake up and prepare for the final trip&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Þorvaldseyri&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Rent a car and go to ICE southeast on Route 1:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Eyjafjallajokul Volcano&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Iceland Erupts Village Trip&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; Seljavallalaug Nature Swimming Pool&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Sixth Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;24th Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Prepare for the flight back to Copenhagen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen Airport&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find a way to check-in at David’s Flat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Take a walk and enjoy Copenhagen afternoon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Seventh Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;25th Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Breakfast or maybe look for a café&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Christmas, sightseeing to Copenhagen biggest cathedral&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen is very close to shore. Visit shore!&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Eighth Day&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;26th Dec&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apartment&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Time to go back&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Packing and go to terminal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Copenhagen Terminal&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Go back to Göteborg&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Göteborg Nils Ericson&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Arrive in Göteborg safe and sound&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That’s a long list but not quite detailed. Anyway, for the whole week of vacation, we will spend approximately 5000 SEK. Not cheap but I hope it will worth it. So, see you in Iceland!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Oh, and yeah, check out this video!&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/Nkkx_0nJ1sY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;/blog/december-is-coming/&quot;&gt;What to do in December?&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on December 11, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Autumn and Post Exam...Hibernation Time?]]></title>
  <link rel="alternate" type="text/html" href="/blog/autumn-hibernation/" />
  <id>/blog/autumn-hibernation</id>
  <published>2014-11-06T10:40:37+01:00</published>
  <updated>2014-11-06T10:40:37+01:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;
&lt;p&gt;If you ask me, “When is the best in Sweden?”. I don’t think I can answer that. It is my 75th day in Göteborg and temperature is decreasing so quickly. I can still remember that last September the temperature was around 15-20 degree Celcius and now less than 5. And good news is, it won’t get any better until April.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;&lt;img src=&quot;/images/post-arianne53-1.jpg&quot; alt=&quot;Arianne 5 Computer Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, no time for blabbing and regret this. Even for my first exam in Chalmers. It was quite a mixed-bag for me, with two courses all about Fault Tolerant Computer Systems and Self Stabilizing Algorithm. The first one was good but the latter…mmmm…I don’t know. The course was Computer Networks, but we had three examiners or lecturers and the focus on the course was all about how to design a self-stabilizing distributed systems. Why self-stabilizing? It grants you an independent system which can be started in any &lt;code&gt;arbitrary-condition&lt;/code&gt; and will eventually recover to its desireable state in finite step executions. How? By communicating with their neighbours. It is a distributed systems! Stop! I’m not gonna continue this…&lt;/p&gt;

&lt;p&gt;And what was fault-tolerant thing all about? Hmmmm…Two words, damn good! The idea is when you are working on something which potentially has a very big impact and severe risks when failed, you don’t want it to be failed. Use self-stabilizing then! No, we’re talking about serious stuff for a sake of gazillion bucks and human lifes. We’re talking about space shuttle, big aircraft, etc. Those are example of stuffs which you have to put &lt;code&gt;zero tolerate&lt;/code&gt; on errors.&lt;/p&gt;

&lt;p&gt;This course is all about putting spare system here and there, adding some redundancy and hazard analysis while at the same time, inviting several guest lecturers from the the best men in the field. One of them was the designer of ESA Arianne 5 computer system. We took several pictures and my God, it was real thing, I got my hand on that super familiar computer featured in one of the world most expensive fireworks.&lt;/p&gt;

&lt;p&gt;Well, in 1996, Europe Space Agency or ESA, was ready to launch their new rocket, Arianne 5. Some components were new, some of them were derived from previous Arianne 4. Everything seems good when after launch, different arc direction when it was leaving earth, brought an overflow into the computer system, triggering self-destruct mode as its final resolve. And the infamous computer, was brought to my class.
And since then, Arianne 5 has been working really great. From 75 rockets launched, only the first failed on a catastrophic failure.&lt;/p&gt;

&lt;p&gt;It is great to know that I still have ‘WOW’ feeling. I’m easily impressed with such thing, yet I’m just wanting and hoping to stand at that level sometimes in the future. So, no hibernating for sure. Lot of ladder steps need to be taken, effort is a function within time so, give your best effort in this finite time of your life. Make great stuffs for the sake of billion people on earth, will you?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Ariane_5&quot;&gt;Arianne 5 - Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ruag.com/aviation/aviation-home/&quot;&gt;RUAG Aviation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/autumn-hibernation/&quot;&gt;Autumn and Post Exam...Hibernation Time?&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on November 06, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Embrace the Uncomfortable...Again]]></title>
  <link rel="alternate" type="text/html" href="/blog/embrace-the-uncomfortable-again/" />
  <id>/blog/embrace-the-uncomfortable-again</id>
  <published>2014-11-05T22:48:44+01:00</published>
  <updated>2014-11-05T22:48:44+01:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;

&lt;p&gt;Alright, if you do Google Image for &lt;code&gt;embrace&lt;/code&gt;, then I’m quite sure it will turn you on. Yes, it will. Lot of hugs and kisses. Yeah, the definition of embrace is ‘holding somebody closely in your arms’. Then &lt;code&gt;embrace the uncomfortable&lt;/code&gt; is trying to hold and live closely with your uncomfortable sides. I know you have one or twos, I know we have it.&lt;/p&gt;

&lt;p&gt;I ain’t a programmer, just happens to be able to finish some stuffs with programming. Yet, programming, similar with other occupations, is kinda boring if you feel that you start to get stuck. So, what ordinary programmers secret to prevent this? The answer is embrace something you are unconfident, you are weak on them, you are ugly on them and everything you are certainly uncomfortable. Yeah, lot of Google queries about how this approach can become a really great solution to cherish your daily lives.&lt;/p&gt;

&lt;p&gt;For a reason which I don’t really know, I get easily bored, even when I’m doing something really fun, e.g. &lt;code&gt;gaming&lt;/code&gt;, &lt;code&gt;movie&lt;/code&gt;, &lt;code&gt;book&lt;/code&gt; etc. Even, for some people, to fulfil their nasty desire, they’re willing to invest a lot of money in which they never used it after the momentum is gone. I’ll take myself for an example. I love to play game and I want to do game properly. I bought my own games and spent not cheap money for that since 2009. Yet, only 15% of them which I’ve played, and rest of them I didn’t even try to install it. Then, I’m trying to follow the waves and bought myself a big camera. Yet, &lt;code&gt;seldom&lt;/code&gt; is how frequent I am using that gear. Thus, what then? New hobby didn’t work out, so how I should tackle this bland routine and get some fun out of the moments?&lt;/p&gt;

&lt;p&gt;The answer is my friend, one of the best answers is to &lt;code&gt;embrace&lt;/code&gt; it, like I said twice or thrice before. If &lt;code&gt;excitement&lt;/code&gt; is the thing you’re looking for, then it is my best approach. How we should do this? To make it short, I will just use three simple steps,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start exploring yourself, from top of your head to your toes.&lt;/li&gt;
  &lt;li&gt;Find what kind of weakness do you have, in which, there are few folks out there that good at it. Best words for this, find your &lt;code&gt;limitation&lt;/code&gt;. Improve the threshold and work on it!&lt;/li&gt;
  &lt;li&gt;Try to match them!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I’ve done, I’m doing and always do a lot of typing.&lt;/li&gt;
  &lt;li&gt;Yet, I realize that I’m just using 5 fingers from 10 possibilities. Then I realize that there’s a lot of people out there that can type flawlesly using 10 fingers.&lt;/li&gt;
  &lt;li&gt;I’m trying to match them, kinda killing me all the time, but it is a nice flavour addition to my life. And for a bonus, now I can type faster and more efficient.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another example, this is my friend’s,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;He realized that he is having a hard time talking to a stranger.&lt;/li&gt;
  &lt;li&gt;Found a goals, in which, he has to talk to 5 strangers in a day.&lt;/li&gt;
  &lt;li&gt;Now, he’s a king of pickup around here.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I know those examples are too specific and not so common, but you can always start with something that really simple,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Arrange your schedule, so that you can go analog once in a week for entire day. Without your laptop, without your phones, no chargers, no internet. Just social!&lt;/li&gt;
  &lt;li&gt;I know you are pretty bad with drawings LOL, start drawing back what you can remember from your first drawing in kindergarten and compare, which one is prettier? Kid-version of yours or present?&lt;/li&gt;
  &lt;li&gt;If you’re wearing glasses, try to walk carefully around your area without it.&lt;/li&gt;
  &lt;li&gt;If reading books is to common, then try to read something really nonsense, e.g. scientific journals and papers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know that it is more like a trivial steps on how to fight your limitation, but at least it gives me a &lt;code&gt;variation&lt;/code&gt; that I need to keep my day cherished. Lot of things you can harvest from doing those silly stuffs. Believe me. It is nonsense at start, then you will realize that world is too big to be left doing nothing. Start from now my friends.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/blog/embrace-the-uncomfortable-again/&quot;&gt;Embrace the Uncomfortable...Again&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on November 05, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[A Month in Sweden]]></title>
  <link rel="alternate" type="text/html" href="/blog/all-about-sweden/" />
  <id>/blog/all-about-sweden</id>
  <published>2014-10-01T00:00:00+02:00</published>
  <updated>2014-10-01T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;
&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;1st Month in Göteborg&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#first-impression&quot; id=&quot;markdown-toc-first-impression&quot;&gt;First Impression!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#apartemen&quot; id=&quot;markdown-toc-apartemen&quot;&gt;Apartemen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transportasi&quot; id=&quot;markdown-toc-transportasi&quot;&gt;Transportasi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#makanan&quot; id=&quot;markdown-toc-makanan&quot;&gt;Makanan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kuliah&quot; id=&quot;markdown-toc-kuliah&quot;&gt;Kuliah&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#does-it-satisfy-my-expectation-on-chalmers-gteborg-and-sweden&quot; id=&quot;markdown-toc-does-it-satisfy-my-expectation-on-chalmers-gteborg-and-sweden&quot;&gt;Does it satisfy my expectation on Chalmers, Göteborg and Sweden?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;p&gt;Secara ga sadar, ini post pertama saya pake Bahasa Indonesia selama nulis di blog ini (ouyeah). Ada banyak hal yang saya dapet selama 30 hari pertama di Göteborg (Gothenburg). Ini mau saya ulas satu per satu deh.&lt;/p&gt;

&lt;h2 id=&quot;first-impression&quot;&gt;First Impression!&lt;/h2&gt;

&lt;p&gt;OK, bandara Landvetter bukanlah bandara besar, jadi ga rame-rame amat cem Changi, Attaturk, ato Cengkareng punya. Pesawat-pesawat yang parkir juga namanya ga ada yang kenal selain Turkish Airline, wong itu pesawat saya. Ada macem Ryan Air, Finnish Airline, KLM dkk. Katanya sih Ryan Air ini Air Asia sini, tapi lom sempet coba sih jadi ga bisa klarifikasi :P. Malah pengen klarifikasi kenapa namanya Ryan, ga menjual pisan. Proses pengecekan stuffs dan personal ID juga lancar dan ngantri deh di Bus. Tiketnya waktu itu beli dahulu secara online, seharga 80:- saja. FYI, notasi simbolik Krona itu ‘:-‘, jadi kalau mau nulis 1 juta Krona cukup tulis aja 1E6:- gitu deh. Busnya OK, selama 40 menit perjalanan ke central Göteborg, bisa nyimpulin nih kota dengan 3 kata: batu, Batu dan BATU!&lt;/p&gt;

&lt;h2 id=&quot;apartemen&quot;&gt;Apartemen&lt;/h2&gt;

&lt;p&gt;Ceileh, selama 6 tahun cuman pake istilah kos, 1 tahun istilah numpang, sekarang boleh lah pake kata apartemen. Cukup hoki nih, dapet CIS code, jadi apartemen ga perlu susah-susah antri, langsung dikasih ama Chalmers gitu ceritanya, tapi sharing ama 6 penghuni yang lain. Sedikit ngarep ada cewek diantara kita sih, tapi apa daya, isinya dominator semua. Two tall guys dari Jerman, one handsome guy dari Bulgaria, one charming guy dari France, one macho padre dari Spain dan two dudes dari Indonesia. Kita semua sharing satu bathroom gede yang isinya dua shower spot (pake tirai kok), dan 2 toilet. So far, ga ada antri-antrian, toh jarang mandi kali. Cuman sekali-duakali shower chat bareng. Asik juga, melatih naked instinct while talking in English. Di Swedia, apartemen kebanyakan sudah berisi gitu, kasur, meja, wajan, panci, vacuum, heater, and stuffs. Enak lah, paling beli cem karpet ato pernak-pernik dari IKEA. Saya sengaja beli pernak-pernik yang ga Asia-Asia banget gitu, biar ga cepet mabuk pengen pulang. So far, benda paling mahal yang dibeli buat rias-rias kamar adalah…Gitar!&lt;/p&gt;

&lt;h2 id=&quot;transportasi&quot;&gt;Transportasi&lt;/h2&gt;

&lt;p&gt;Di region Västra Götaland ini, transportasi dipegang oleh konsorsium independen, Västraffik. Dia melayani, bus innercity, tram dan ferry. Ferry-nya ini bisa dipakai untuk jalan-jalan ke pulau di daerah barat kota dan nyebrang sungai yang ngebelah Göteborg jadi utara dan selatan. Selama sebulan ini udah 3x naik Ferry, so far cuman dipakai untuk ngeceng. Untuk biayanya, ada yang perbulan, per tiga bulan, ada yang model pulsa. Belinya bisa di toko-toko serba ada gitu, saya tapi cuman nyaranin ke Pressbyrån aja, karena neng-neng Swedishnya well selected (if you know what I mean). Saya beli tiga bulan harga normal 1400:- karena untuk yang diskon, hanya untuk yang umurnya tidak lebih tua dari 26 tahun. Padahal, udah coba ngaku muda, tapi tetep aja diminta nunjukin passport. Udah pinter, fasih English, jujur lagi nih mbak-mbak Pressbyrån-nya, suka deh. Ahahahaha.&lt;/p&gt;

&lt;h2 id=&quot;makanan&quot;&gt;Makanan&lt;/h2&gt;

&lt;p&gt;Aman bro, so far saya ga masalah. Kekhawatiran dini seperti terbatasnya barang halal ga terbukti kok, banyak imigran di Göteborg, terutama dari timur tengah, jadinya banyak juga toko-toko kebab gitu, bahkan kayaknya selalu ada menu Vegetarisk untuk mereka yang khawatir cacingan :P. Cuman untuk menu jadi yang obvious babi susah juga dibedain, kek Köttbullar, yang baksonya Swedia itu, ingredientnya sih cuman beef, tapi ternyata daging baby, jadinya haram untuk Moslem. Untung nih deket apartemen ada toko oriental gitu, saya ngiranya sih oriental alá Chinatown, tapi ternyata Turkiyé punya. Ilmu baru disini, Halal dan Helal itu sama bro :).&lt;/p&gt;

&lt;h2 id=&quot;kuliah&quot;&gt;Kuliah&lt;/h2&gt;

&lt;p&gt;30 hari pertama, isinya have fun doang. Ada serangkaian acara seru cem tram race dan challenges gitu. Tiap kelompok biasanya berisi 10-12 orang dari berbagai negara. Kelompok saya lumayan kompak dan kocak, terutama anak-anak India dan Spain sih, cenderung open dan ga garing. Mirip orang Jawanya Eropa kali ya ahahaha. Nah di grup ini, kenalan ama cew dari Delft, doi cakeparat sih. Trus kita ngobrol-ngobrol dan akhirnya dia tahu kalo saya lepas Delft demi Chalmers dan saya expect dia bakal kek kaget trus tapi responnya malah cenderung setuju ama saya (yey). Soalnya, dari atmosfernya, Chalmers lebih fun dan lebih non study-oriented. Doi sih cuman exchange student selama 6 bulan karena Delft ama Chalmers itu ternyata masuk ke IDEA League (bareng RWTH Aachen dan ETH Zurich). Jadi peluang exchange gitu banyak amit-amit kayaknya sih. OK, beda kuliah sini ama ITB apa? Hmmm…PERIOD vs SEMESTER! Satu semester disini diisi 2 period. Per period ambil cuman 2 courses, dan dihabisin di satu period. Jadi jangan heran, tiap hari ketemunya kuliah itu-itu mulu. Plusnya, kita jadi fokus, minusnya? Sekali ketinggalan, makin jauh bro kalau ga dikejar. Tapi Chalmers punya banyak tempat seru kok buat break the ice, pas summer sih kita bisa gulung-gulung di rumput, makan rumput, atau minum air dari air mancur gitu. Tapi hawanya udah mulai dingin karena uda mau masuk Fall ’14, jadi gulung-gulungnya dikurangin deh.&lt;/p&gt;

&lt;h2 id=&quot;does-it-satisfy-my-expectation-on-chalmers-gteborg-and-sweden&quot;&gt;Does it satisfy my expectation on Chalmers, Göteborg and Sweden?&lt;/h2&gt;

&lt;p&gt;Absolutely YES, salah satu motivasi saya pilih Chalmers vs Delft, yang paling penting, adalah lingkup profesional yang lebih bagus di Swedia. Baru masuk minggu ketiga kuliah, sudah diundang ama Spotify AB untuk study evening, Cisco Sweden untuk Fika &amp;amp; Lunch Class, bahkan Volvo dan Ericsson juga ngadain Lunch Class juga. Göteborg sendiri walaupun secara statistik, kota paling ramai kedua di Swedia dan Skandinavia, tetep aja boleh dibilang sepi dari standar ex Jakartanian. Tapi justru itu yang aciek. Orang-orangnya? Bule-bulenya? Swedish-swedish? So far, they stand by their reputation kok, friendly, cenderung low profile (lagom) dan tidak seronok. Suka belajar bareng dan baca buku, trus logat English-nya absolutely inhuman.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/all-about-sweden/&quot;&gt;A Month in Sweden&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on October 01, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Get Better Soon, Jakarta]]></title>
  <link rel="alternate" type="text/html" href="/blog/last-week-on-jakarta/" />
  <id>/blog/last-week-on-jakarta</id>
  <published>2014-07-14T00:00:00+02:00</published>
  <updated>2014-07-14T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
	&lt;img src=&quot;/images/post-jakarta.jpg&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
This is my last week on Jakarta and I have to say, I am really &lt;code&gt;grateful&lt;/code&gt; about it. Why? For the last 6 months, you can consider me as one amongst thousands of motorist trapped on &lt;code&gt;deadlock traffic&lt;/code&gt; as shown on above image.&lt;/p&gt;

&lt;p&gt;I was working on Sudirman, quite busy office district in Center – South Jakarta border which is merely ~10 mins walk to Bunderan HI, a famous landmark of Jakarta. However, my home is &lt;code&gt;26 kilometres&lt;/code&gt; away.&lt;/p&gt;

&lt;p&gt;Technically, if you ride anything which resulted on average 26 km per hour of speed, you will spend an hour on the road. However, that’s not really true on the practice. My record was 3 and half hours for only 26 km of distance. Which means, LESS than third of average speed. For 3.5 hours, I need to battle hot weather, sweat, CO2 smoke and &lt;code&gt;emotional feeling&lt;/code&gt; by understanding that you will go nowhere in a minute or two.&lt;/p&gt;

&lt;p&gt;I have a brother who can considered as an avid motorist. He drove his motor to his office &lt;code&gt;since 2001&lt;/code&gt;. He said that Jakarta in 2001 was really empty. Same distance covered only in 25 to 30 minutes, less fatigue and less chance to be &lt;code&gt;killed&lt;/code&gt; on duty. However, urbanisation to Jakarta is &lt;code&gt;uncontrollable&lt;/code&gt; and people start their family outside the Jakarta, e.g. Tangerang, Bekasi, Depok even Bogor. &lt;code&gt;Slow commuter&lt;/code&gt; and &lt;code&gt;not enough&lt;/code&gt; Busway corridor motivate people to buy &lt;code&gt;cheaper-than-ever&lt;/code&gt; motor and start to be a motorist. Plus, it was very easy to get a driving license at that time caused everyone to officially eligible to ride motor every day every night.&lt;/p&gt;

&lt;p&gt;Well, traffic is a sign of a &lt;code&gt;ache&lt;/code&gt; or &lt;code&gt;disease&lt;/code&gt; of a city. If that’s true (you have to agree with me on this), then Jakarta only have couple of days to live from this disease. That’s my opinion on how bad, how monstrous traffic in Jakarta can be.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/last-week-on-jakarta/&quot;&gt;Get Better Soon, Jakarta&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on July 14, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Remembering Good Old 90&#8217;s Song]]></title>
  <link rel="alternate" type="text/html" href="/blog/remembering-good-old-90s-song/" />
  <id>/blog/remembering-good-old-90s-song</id>
  <published>2014-04-13T00:00:00+02:00</published>
  <updated>2014-04-13T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;

&lt;p&gt;I don’t know, but for me, I really hate MTV for now. I’m willing to put it onto bottom three of ‘channels I’ll never watch again’ after MTV and MTV. I see how they’re trying to gather younger audiences by delivering some of the worst songs I’ve ever listen and, well, I’ve pretty much given up to love it once again.&lt;/p&gt;

&lt;p&gt;Well, they used to be my favorite channel. That was back in 1998, I was 10 years old, I was in mad love with 98 World Cup theme, ‘Chumbawamba – Tubthumping’. I was really thankful that MTV aired this song more than twice in a day.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
&lt;img src=&quot;/images/post-mtv.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;And it was going better and better, especially when my sister bought me MTV Fresh album in 1999. That was my first CD cassette. I can still remember properly the entire list:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SIDE A&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Arkarna – So Little Time&lt;/li&gt;
  &lt;li&gt;Chumbawamba – Tubthumping&lt;/li&gt;
  &lt;li&gt;Blur – Song 2&lt;/li&gt;
  &lt;li&gt;Green Day – Hitchin’ a Ride&lt;/li&gt;
  &lt;li&gt;Third Eye Blind – Semi Charmed Life&lt;/li&gt;
  &lt;li&gt;Catatonia – Mulder &amp;amp; Scully&lt;/li&gt;
  &lt;li&gt;The Verve – The Drugs Don’t Work&lt;/li&gt;
  &lt;li&gt;Cornershop – Brime of Asha&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;SIDE B&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Everclear – Everything to Everyone&lt;/li&gt;
  &lt;li&gt;Meredith Brooks – Bitch&lt;/li&gt;
  &lt;li&gt;Mansun – Wide Open Space&lt;/li&gt;
  &lt;li&gt;Radiohead – Karma Police&lt;/li&gt;
  &lt;li&gt;Suede – Beautiful Ones&lt;/li&gt;
  &lt;li&gt;Matchbox Twenty – Push&lt;/li&gt;
  &lt;li&gt;Oasis – D’you Know What I Mean&lt;/li&gt;
  &lt;li&gt;Sugar Ray – Every Morning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe if you’re lucky enough, you can find the list on &lt;a title=&quot;Youtube&quot; href=&quot;http://www.youtube.com/&quot; target=&quot;_blank&quot;&gt;Youtube &lt;/a&gt;or &lt;a title=&quot;SoundCloud&quot; href=&quot;http://soundcloud.com/&quot; target=&quot;_blank&quot;&gt;Soundcloud&lt;/a&gt;. But remember, 90s is just too good to be forgotten.
So MTV, will you learn from it? I don’t think you will.
Cheers!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/remembering-good-old-90s-song/&quot;&gt;Remembering Good Old 90&amp;#8217;s Song&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on April 13, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Frontier of Sovereignty]]></title>
  <link rel="alternate" type="text/html" href="/blog/a-thousand-of/" />
  <id>/blog/a-thousand-of</id>
  <published>2014-04-13T00:00:00+02:00</published>
  <updated>2014-04-13T00:00:00+02:00</updated>
  <author>
    <name>Yanuar Aditya</name>
    <uri></uri>
    <email>yanuart.adityan@gmail.com</email>
  </author>
  <content type="html">
    &lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img src=&quot;/images/post-frontier.jpg&quot; /&gt;
&lt;/p&gt;

  &lt;p style=&quot;text-align: center;&quot;&gt;
  &amp;#8220;A thousand of old men are just able to dream. A young man is able to change the world.&amp;#8221;
&lt;/p&gt;

  &lt;p style=&quot;text-align: center;&quot;&gt;
  -Ir. Soekarno
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  After having 12 days of leadership oriented training held by LPDP Scholarship, which half of them spent on outdoor (Halim Perdanakusumah Military Airfield and Mount Salak mountainside), maybe that quote from the very first prominent president of Indonesia just feels right.
&lt;/p&gt;

&lt;p&gt;As a young generation, we were doctrined and visioned as a potential ruler and leader at the time of 100th Anniversary of Indonesia in 2045. But, was it worth to spent 12 days just to tell us that? Was it efficient enough? I’d rather eat hell lot of quotes from Ir. Soekarno and done with it. Maybe it just takes you a whole day to learn to understand what it feels like to be a leader of a nation.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;However, I have to be honest now and those days were absolutely unforgettable. I was in tears when we were having ‘failed’ closing night bonfire party at airfield. Those armies were still trying so hard to make a fire out of watery-wood and when I start to realize that they are the frontier of sovereignty, they are the last people who stand when we, poor citizens, losing hope easily because of conflict, war and disaster. I immediately started to cry and tried so hard to hid it.&lt;/p&gt;

&lt;p&gt;Oh, why didn’t we just learn to live like they were doing, not for only 3 days, but hundred of days. Believe me, I can live with them for couple of years. I should say let’s do a mandatory military service for every young generations. 1 year is OK, 2 years is perfect. Let’s make those armies shout and yell at us, because I love it. I love to be shouted, by the frontier of sovereignty. But no ass-spanking. Hey ho!?&lt;/p&gt;

&lt;p&gt;Lastly, those 3 days was a happy moment for them, they were so proud about Indonesia, and I thought that was good for them. They need sympathy from all of us. They need to be acknowledged. Well, some of them are jackass for sure, but maybe because I was jealous when they got attention easily from the girls. LOL. Well, well done sir, you deserve that. Maybe….just maybe.&lt;/p&gt;

&lt;p&gt;Looking forward to meet those guys again anytime soon. Sukhoi!?&lt;/p&gt;

&lt;p&gt;Cheers.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/blog/a-thousand-of/&quot;&gt;Frontier of Sovereignty&lt;/a&gt; was originally published by Yanuar Aditya at &lt;a href=&quot;&quot;&gt;Mirkwood Ape&lt;/a&gt; on April 13, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>
